// FILE AUTOGENERATED. DO NOT MODIFY
using System;

namespace Starfield.Core.Block.Blocks {

    [Block("minecraft:oak_sign", 155, 3381, 3412, 3382)]
    public class BlockOakSign : BlockBase {

        public override ushort State {
            get {
                if(Rotation == 0 && Waterlogged == true) {
                    return 3381;
                }

                if(Rotation == 0 && Waterlogged == false) {
                    return 3382;
                }

                if(Rotation == 1 && Waterlogged == true) {
                    return 3383;
                }

                if(Rotation == 1 && Waterlogged == false) {
                    return 3384;
                }

                if(Rotation == 2 && Waterlogged == true) {
                    return 3385;
                }

                if(Rotation == 2 && Waterlogged == false) {
                    return 3386;
                }

                if(Rotation == 3 && Waterlogged == true) {
                    return 3387;
                }

                if(Rotation == 3 && Waterlogged == false) {
                    return 3388;
                }

                if(Rotation == 4 && Waterlogged == true) {
                    return 3389;
                }

                if(Rotation == 4 && Waterlogged == false) {
                    return 3390;
                }

                if(Rotation == 5 && Waterlogged == true) {
                    return 3391;
                }

                if(Rotation == 5 && Waterlogged == false) {
                    return 3392;
                }

                if(Rotation == 6 && Waterlogged == true) {
                    return 3393;
                }

                if(Rotation == 6 && Waterlogged == false) {
                    return 3394;
                }

                if(Rotation == 7 && Waterlogged == true) {
                    return 3395;
                }

                if(Rotation == 7 && Waterlogged == false) {
                    return 3396;
                }

                if(Rotation == 8 && Waterlogged == true) {
                    return 3397;
                }

                if(Rotation == 8 && Waterlogged == false) {
                    return 3398;
                }

                if(Rotation == 9 && Waterlogged == true) {
                    return 3399;
                }

                if(Rotation == 9 && Waterlogged == false) {
                    return 3400;
                }

                if(Rotation == 10 && Waterlogged == true) {
                    return 3401;
                }

                if(Rotation == 10 && Waterlogged == false) {
                    return 3402;
                }

                if(Rotation == 11 && Waterlogged == true) {
                    return 3403;
                }

                if(Rotation == 11 && Waterlogged == false) {
                    return 3404;
                }

                if(Rotation == 12 && Waterlogged == true) {
                    return 3405;
                }

                if(Rotation == 12 && Waterlogged == false) {
                    return 3406;
                }

                if(Rotation == 13 && Waterlogged == true) {
                    return 3407;
                }

                if(Rotation == 13 && Waterlogged == false) {
                    return 3408;
                }

                if(Rotation == 14 && Waterlogged == true) {
                    return 3409;
                }

                if(Rotation == 14 && Waterlogged == false) {
                    return 3410;
                }

                if(Rotation == 15 && Waterlogged == true) {
                    return 3411;
                }

                if(Rotation == 15 && Waterlogged == false) {
                    return 3412;
                }

                return DefaultState;
            }

            set {
                if(value == 3381) {
                    Rotation = 0;
Waterlogged = true;
                }

                if(value == 3382) {
                    Rotation = 0;
Waterlogged = false;
                }

                if(value == 3383) {
                    Rotation = 1;
Waterlogged = true;
                }

                if(value == 3384) {
                    Rotation = 1;
Waterlogged = false;
                }

                if(value == 3385) {
                    Rotation = 2;
Waterlogged = true;
                }

                if(value == 3386) {
                    Rotation = 2;
Waterlogged = false;
                }

                if(value == 3387) {
                    Rotation = 3;
Waterlogged = true;
                }

                if(value == 3388) {
                    Rotation = 3;
Waterlogged = false;
                }

                if(value == 3389) {
                    Rotation = 4;
Waterlogged = true;
                }

                if(value == 3390) {
                    Rotation = 4;
Waterlogged = false;
                }

                if(value == 3391) {
                    Rotation = 5;
Waterlogged = true;
                }

                if(value == 3392) {
                    Rotation = 5;
Waterlogged = false;
                }

                if(value == 3393) {
                    Rotation = 6;
Waterlogged = true;
                }

                if(value == 3394) {
                    Rotation = 6;
Waterlogged = false;
                }

                if(value == 3395) {
                    Rotation = 7;
Waterlogged = true;
                }

                if(value == 3396) {
                    Rotation = 7;
Waterlogged = false;
                }

                if(value == 3397) {
                    Rotation = 8;
Waterlogged = true;
                }

                if(value == 3398) {
                    Rotation = 8;
Waterlogged = false;
                }

                if(value == 3399) {
                    Rotation = 9;
Waterlogged = true;
                }

                if(value == 3400) {
                    Rotation = 9;
Waterlogged = false;
                }

                if(value == 3401) {
                    Rotation = 10;
Waterlogged = true;
                }

                if(value == 3402) {
                    Rotation = 10;
Waterlogged = false;
                }

                if(value == 3403) {
                    Rotation = 11;
Waterlogged = true;
                }

                if(value == 3404) {
                    Rotation = 11;
Waterlogged = false;
                }

                if(value == 3405) {
                    Rotation = 12;
Waterlogged = true;
                }

                if(value == 3406) {
                    Rotation = 12;
Waterlogged = false;
                }

                if(value == 3407) {
                    Rotation = 13;
Waterlogged = true;
                }

                if(value == 3408) {
                    Rotation = 13;
Waterlogged = false;
                }

                if(value == 3409) {
                    Rotation = 14;
Waterlogged = true;
                }

                if(value == 3410) {
                    Rotation = 14;
Waterlogged = false;
                }

                if(value == 3411) {
                    Rotation = 15;
Waterlogged = true;
                }

                if(value == 3412) {
                    Rotation = 15;
Waterlogged = false;
                }

            }
        }

        public int Rotation { get; set; } = 0;
        public bool Waterlogged { get; set; } = false;

        public BlockOakSign() {
            State = DefaultState;
        }

        public BlockOakSign(ushort state) : base(state) {
            if(state < MinimumState || state > MaximumState) {
                throw new ArgumentOutOfRangeException("state");
            }

            State = state;
        }

        public BlockOakSign(int rotation, bool waterlogged) {
            Rotation = rotation;
            Waterlogged = waterlogged;
        }
    }
}