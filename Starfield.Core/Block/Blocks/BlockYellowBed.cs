// FILE AUTOGENERATED. DO NOT MODIFY
using System;

namespace Starfield.Core.Block.Blocks {

    [Block("minecraft:yellow_bed", 79, 1113, 1128, 1116)]
    public class BlockYellowBed : BlockBase {

        public override ushort State {
            get {
                if(Facing == "north" && Occupied == true && Part == "head") {
                    return 1113;
                }

                if(Facing == "north" && Occupied == true && Part == "foot") {
                    return 1114;
                }

                if(Facing == "north" && Occupied == false && Part == "head") {
                    return 1115;
                }

                if(Facing == "north" && Occupied == false && Part == "foot") {
                    return 1116;
                }

                if(Facing == "south" && Occupied == true && Part == "head") {
                    return 1117;
                }

                if(Facing == "south" && Occupied == true && Part == "foot") {
                    return 1118;
                }

                if(Facing == "south" && Occupied == false && Part == "head") {
                    return 1119;
                }

                if(Facing == "south" && Occupied == false && Part == "foot") {
                    return 1120;
                }

                if(Facing == "west" && Occupied == true && Part == "head") {
                    return 1121;
                }

                if(Facing == "west" && Occupied == true && Part == "foot") {
                    return 1122;
                }

                if(Facing == "west" && Occupied == false && Part == "head") {
                    return 1123;
                }

                if(Facing == "west" && Occupied == false && Part == "foot") {
                    return 1124;
                }

                if(Facing == "east" && Occupied == true && Part == "head") {
                    return 1125;
                }

                if(Facing == "east" && Occupied == true && Part == "foot") {
                    return 1126;
                }

                if(Facing == "east" && Occupied == false && Part == "head") {
                    return 1127;
                }

                if(Facing == "east" && Occupied == false && Part == "foot") {
                    return 1128;
                }

                return DefaultState;
            }

            set {
                if(value == 1113) {
                    Facing = "north";
Occupied = true;
Part = "head";
                }

                if(value == 1114) {
                    Facing = "north";
Occupied = true;
Part = "foot";
                }

                if(value == 1115) {
                    Facing = "north";
Occupied = false;
Part = "head";
                }

                if(value == 1116) {
                    Facing = "north";
Occupied = false;
Part = "foot";
                }

                if(value == 1117) {
                    Facing = "south";
Occupied = true;
Part = "head";
                }

                if(value == 1118) {
                    Facing = "south";
Occupied = true;
Part = "foot";
                }

                if(value == 1119) {
                    Facing = "south";
Occupied = false;
Part = "head";
                }

                if(value == 1120) {
                    Facing = "south";
Occupied = false;
Part = "foot";
                }

                if(value == 1121) {
                    Facing = "west";
Occupied = true;
Part = "head";
                }

                if(value == 1122) {
                    Facing = "west";
Occupied = true;
Part = "foot";
                }

                if(value == 1123) {
                    Facing = "west";
Occupied = false;
Part = "head";
                }

                if(value == 1124) {
                    Facing = "west";
Occupied = false;
Part = "foot";
                }

                if(value == 1125) {
                    Facing = "east";
Occupied = true;
Part = "head";
                }

                if(value == 1126) {
                    Facing = "east";
Occupied = true;
Part = "foot";
                }

                if(value == 1127) {
                    Facing = "east";
Occupied = false;
Part = "head";
                }

                if(value == 1128) {
                    Facing = "east";
Occupied = false;
Part = "foot";
                }

            }
        }

        public string Facing { get; set; } = "north";
        public bool Occupied { get; set; } = false;
        public string Part { get; set; } = "foot";

        public BlockYellowBed() {
            State = DefaultState;
        }

        public BlockYellowBed(ushort state) : base(state) {
            if(state < MinimumState || state > MaximumState) {
                throw new ArgumentOutOfRangeException("state");
            }

            State = state;
        }

        public BlockYellowBed(string facing, bool occupied, string part) {
            Facing = facing;
            Occupied = occupied;
            Part = part;
        }
    }
}