// FILE AUTOGENERATED. DO NOT MODIFY
using System;

namespace Starfield.Core.Block.Blocks {

    [Block("minecraft:jungle_leaves", 62, 187, 200, 200)]
    public class BlockJungleLeaves : BlockBase {

        public override ushort State {
            get {
                if(Distance == 1 && Persistent == true) {
                    return 187;
                }

                if(Distance == 1 && Persistent == false) {
                    return 188;
                }

                if(Distance == 2 && Persistent == true) {
                    return 189;
                }

                if(Distance == 2 && Persistent == false) {
                    return 190;
                }

                if(Distance == 3 && Persistent == true) {
                    return 191;
                }

                if(Distance == 3 && Persistent == false) {
                    return 192;
                }

                if(Distance == 4 && Persistent == true) {
                    return 193;
                }

                if(Distance == 4 && Persistent == false) {
                    return 194;
                }

                if(Distance == 5 && Persistent == true) {
                    return 195;
                }

                if(Distance == 5 && Persistent == false) {
                    return 196;
                }

                if(Distance == 6 && Persistent == true) {
                    return 197;
                }

                if(Distance == 6 && Persistent == false) {
                    return 198;
                }

                if(Distance == 7 && Persistent == true) {
                    return 199;
                }

                if(Distance == 7 && Persistent == false) {
                    return 200;
                }

                return DefaultState;
            }

            set {
                if(value == 187) {
                    Distance = 1;
Persistent = true;
                }

                if(value == 188) {
                    Distance = 1;
Persistent = false;
                }

                if(value == 189) {
                    Distance = 2;
Persistent = true;
                }

                if(value == 190) {
                    Distance = 2;
Persistent = false;
                }

                if(value == 191) {
                    Distance = 3;
Persistent = true;
                }

                if(value == 192) {
                    Distance = 3;
Persistent = false;
                }

                if(value == 193) {
                    Distance = 4;
Persistent = true;
                }

                if(value == 194) {
                    Distance = 4;
Persistent = false;
                }

                if(value == 195) {
                    Distance = 5;
Persistent = true;
                }

                if(value == 196) {
                    Distance = 5;
Persistent = false;
                }

                if(value == 197) {
                    Distance = 6;
Persistent = true;
                }

                if(value == 198) {
                    Distance = 6;
Persistent = false;
                }

                if(value == 199) {
                    Distance = 7;
Persistent = true;
                }

                if(value == 200) {
                    Distance = 7;
Persistent = false;
                }

            }
        }

        public int Distance { get; set; } = 7;
        public bool Persistent { get; set; } = false;

        public BlockJungleLeaves() {
            State = DefaultState;
        }

        public BlockJungleLeaves(ushort state) : base(state) {
            if(state < MinimumState || state > MaximumState) {
                throw new ArgumentOutOfRangeException("state");
            }

            State = state;
        }

        public BlockJungleLeaves(int distance, bool persistent) {
            Distance = distance;
            Persistent = persistent;
        }
    }
}