// FILE AUTOGENERATED. DO NOT MODIFY
using System;

namespace Starfield.Core.Block.Blocks {

    [Block("minecraft:gray_banner", 423, 8013, 8028, 8013)]
    public class BlockGrayBanner : BlockBase {

        public override ushort State {
            get {
                if(Rotation == 0) {
                    return 8013;
                }

                if(Rotation == 1) {
                    return 8014;
                }

                if(Rotation == 2) {
                    return 8015;
                }

                if(Rotation == 3) {
                    return 8016;
                }

                if(Rotation == 4) {
                    return 8017;
                }

                if(Rotation == 5) {
                    return 8018;
                }

                if(Rotation == 6) {
                    return 8019;
                }

                if(Rotation == 7) {
                    return 8020;
                }

                if(Rotation == 8) {
                    return 8021;
                }

                if(Rotation == 9) {
                    return 8022;
                }

                if(Rotation == 10) {
                    return 8023;
                }

                if(Rotation == 11) {
                    return 8024;
                }

                if(Rotation == 12) {
                    return 8025;
                }

                if(Rotation == 13) {
                    return 8026;
                }

                if(Rotation == 14) {
                    return 8027;
                }

                if(Rotation == 15) {
                    return 8028;
                }

                return DefaultState;
            }

            set {
                if(value == 8013) {
                    Rotation = 0;
                }

                if(value == 8014) {
                    Rotation = 1;
                }

                if(value == 8015) {
                    Rotation = 2;
                }

                if(value == 8016) {
                    Rotation = 3;
                }

                if(value == 8017) {
                    Rotation = 4;
                }

                if(value == 8018) {
                    Rotation = 5;
                }

                if(value == 8019) {
                    Rotation = 6;
                }

                if(value == 8020) {
                    Rotation = 7;
                }

                if(value == 8021) {
                    Rotation = 8;
                }

                if(value == 8022) {
                    Rotation = 9;
                }

                if(value == 8023) {
                    Rotation = 10;
                }

                if(value == 8024) {
                    Rotation = 11;
                }

                if(value == 8025) {
                    Rotation = 12;
                }

                if(value == 8026) {
                    Rotation = 13;
                }

                if(value == 8027) {
                    Rotation = 14;
                }

                if(value == 8028) {
                    Rotation = 15;
                }

            }
        }

        public int Rotation { get; set; } = 0;

        public BlockGrayBanner() {
            State = DefaultState;
        }

        public BlockGrayBanner(ushort state) : base(state) {
            if(state < MinimumState || state > MaximumState) {
                throw new ArgumentOutOfRangeException("state");
            }

            State = state;
        }

        public BlockGrayBanner(int rotation) {
            Rotation = rotation;
        }
    }
}