// FILE AUTOGENERATED. DO NOT MODIFY
using System;

namespace nylium.Core.Block.Blocks {

    public class BlockTurtleEgg : BlockBase {

        public override string Id { get { return "minecraft:turtle_egg"; } }

        public override ushort MinimumState { get { return 9502; } }
        public override ushort MaximumState { get { return 9513; } }
        public override ushort DefaultState { get { return 9502; } }

        public override ushort State {
            get {
                if(Eggs == 1 && Hatch == 0) {
                    return 9502;
                }

                if(Eggs == 1 && Hatch == 1) {
                    return 9503;
                }

                if(Eggs == 1 && Hatch == 2) {
                    return 9504;
                }

                if(Eggs == 2 && Hatch == 0) {
                    return 9505;
                }

                if(Eggs == 2 && Hatch == 1) {
                    return 9506;
                }

                if(Eggs == 2 && Hatch == 2) {
                    return 9507;
                }

                if(Eggs == 3 && Hatch == 0) {
                    return 9508;
                }

                if(Eggs == 3 && Hatch == 1) {
                    return 9509;
                }

                if(Eggs == 3 && Hatch == 2) {
                    return 9510;
                }

                if(Eggs == 4 && Hatch == 0) {
                    return 9511;
                }

                if(Eggs == 4 && Hatch == 1) {
                    return 9512;
                }

                if(Eggs == 4 && Hatch == 2) {
                    return 9513;
                }

                return DefaultState;
            }

            set {
                if(value == 9502) {
                    Eggs = 1;
Hatch = 0;
                }

                if(value == 9503) {
                    Eggs = 1;
Hatch = 1;
                }

                if(value == 9504) {
                    Eggs = 1;
Hatch = 2;
                }

                if(value == 9505) {
                    Eggs = 2;
Hatch = 0;
                }

                if(value == 9506) {
                    Eggs = 2;
Hatch = 1;
                }

                if(value == 9507) {
                    Eggs = 2;
Hatch = 2;
                }

                if(value == 9508) {
                    Eggs = 3;
Hatch = 0;
                }

                if(value == 9509) {
                    Eggs = 3;
Hatch = 1;
                }

                if(value == 9510) {
                    Eggs = 3;
Hatch = 2;
                }

                if(value == 9511) {
                    Eggs = 4;
Hatch = 0;
                }

                if(value == 9512) {
                    Eggs = 4;
Hatch = 1;
                }

                if(value == 9513) {
                    Eggs = 4;
Hatch = 2;
                }

            }
        }

        public int Eggs { get; set; } = 1;
        public int Hatch { get; set; } = 0;

        public BlockTurtleEgg() {
            State = DefaultState;
        }

        public BlockTurtleEgg(ushort state) {
            if(state < MinimumState || state > MaximumState) {
                throw new ArgumentOutOfRangeException("state");
            }

            State = state;
        }

        public BlockTurtleEgg(int eggs, int hatch) {
            Eggs = eggs;
            Hatch = hatch;
        }
    }
}