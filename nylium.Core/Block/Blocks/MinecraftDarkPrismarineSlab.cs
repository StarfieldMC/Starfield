// FILE AUTOGENERATED. DO NOT MODIFY
using System;

namespace nylium.Core.Block.Blocks {

    public class BlockDarkPrismarineSlab : BlockBase {

        public override string Id { get { return "minecraft:dark_prismarine_slab"; } }

        public override ushort MinimumState { get { return 7860; } }
        public override ushort MaximumState { get { return 7865; } }
        public override ushort DefaultState { get { return 7863; } }

        public override ushort State {
            get {
                if(Type == "top" && Waterlogged == true) {
                    return 7860;
                }

                if(Type == "top" && Waterlogged == false) {
                    return 7861;
                }

                if(Type == "bottom" && Waterlogged == true) {
                    return 7862;
                }

                if(Type == "bottom" && Waterlogged == false) {
                    return 7863;
                }

                if(Type == "double" && Waterlogged == true) {
                    return 7864;
                }

                if(Type == "double" && Waterlogged == false) {
                    return 7865;
                }

                return DefaultState;
            }

            set {
                if(value == 7860) {
                    Type = "top";
Waterlogged = true;
                }

                if(value == 7861) {
                    Type = "top";
Waterlogged = false;
                }

                if(value == 7862) {
                    Type = "bottom";
Waterlogged = true;
                }

                if(value == 7863) {
                    Type = "bottom";
Waterlogged = false;
                }

                if(value == 7864) {
                    Type = "double";
Waterlogged = true;
                }

                if(value == 7865) {
                    Type = "double";
Waterlogged = false;
                }

            }
        }

        public string Type { get; set; } = "bottom";
        public bool Waterlogged { get; set; } = false;

        public BlockDarkPrismarineSlab() {
            State = DefaultState;
        }

        public BlockDarkPrismarineSlab(ushort state) {
            if(state < MinimumState || state > MaximumState) {
                throw new ArgumentOutOfRangeException("state");
            }

            State = state;
        }

        public BlockDarkPrismarineSlab(string type, bool waterlogged) {
            Type = type;
            Waterlogged = waterlogged;
        }
    }
}