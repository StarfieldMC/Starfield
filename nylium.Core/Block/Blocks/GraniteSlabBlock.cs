// AUTOGENERATED. DO NOT MODIFY
using nylium.Core.Level;

namespace nylium.Core.Block.Blocks {

    public class GraniteSlabBlock : BaseBlock {

        public BlockType Type { get; }
        public bool Waterlogged { get; }

        public GraniteSlabBlock(Chunk chunk, int x, int y, int z) : base(chunk, x, y, z, 649, 10844) { }

        public GraniteSlabBlock(Chunk chunk, int x, int y, int z, ushort state) : base(chunk, x, y, z, 649, state) {if(state == 10841) {
                Type = BlockType.Top;
                Waterlogged = true;
            } else if(state == 10842) {
                Type = BlockType.Top;
                Waterlogged = false;
            } else if(state == 10843) {
                Type = BlockType.Bottom;
                Waterlogged = true;
            } else if(state == 10844) {
                Type = BlockType.Bottom;
                Waterlogged = false;
            } else if(state == 10845) {
                Type = BlockType.Double;
                Waterlogged = true;
            } else if(state == 10846) {
                Type = BlockType.Double;
                Waterlogged = false;
            }
        }

        public GraniteSlabBlock(Chunk chunk, int x, int y, int z, BlockType type, bool waterlogged) : base(chunk, x, y, z, 649, 10844) {
if(type == BlockType.Top && waterlogged == true) {
                State = 10841;
            } else if(type == BlockType.Top && waterlogged == false) {
                State = 10842;
            } else if(type == BlockType.Bottom && waterlogged == true) {
                State = 10843;
            } else if(type == BlockType.Bottom && waterlogged == false) {
                State = 10844;
            } else if(type == BlockType.Double && waterlogged == true) {
                State = 10845;
            } else if(type == BlockType.Double && waterlogged == false) {
                State = 10846;
            }
        }

        public enum BlockType {
            
            Top,
            Bottom,
            Double
        }
    }
}
