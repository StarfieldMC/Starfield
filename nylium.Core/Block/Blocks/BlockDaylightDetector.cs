// FILE AUTOGENERATED. DO NOT MODIFY
using System;

namespace nylium.Core.Block.Blocks {

    [Block("minecraft:daylight_detector", 333, 6698, 6729, 6714)]
    public class BlockDaylightDetector : BlockBase {

        public override ushort State {
            get {
                if(Inverted == true && Power == 0) {
                    return 6698;
                }

                if(Inverted == true && Power == 1) {
                    return 6699;
                }

                if(Inverted == true && Power == 2) {
                    return 6700;
                }

                if(Inverted == true && Power == 3) {
                    return 6701;
                }

                if(Inverted == true && Power == 4) {
                    return 6702;
                }

                if(Inverted == true && Power == 5) {
                    return 6703;
                }

                if(Inverted == true && Power == 6) {
                    return 6704;
                }

                if(Inverted == true && Power == 7) {
                    return 6705;
                }

                if(Inverted == true && Power == 8) {
                    return 6706;
                }

                if(Inverted == true && Power == 9) {
                    return 6707;
                }

                if(Inverted == true && Power == 10) {
                    return 6708;
                }

                if(Inverted == true && Power == 11) {
                    return 6709;
                }

                if(Inverted == true && Power == 12) {
                    return 6710;
                }

                if(Inverted == true && Power == 13) {
                    return 6711;
                }

                if(Inverted == true && Power == 14) {
                    return 6712;
                }

                if(Inverted == true && Power == 15) {
                    return 6713;
                }

                if(Inverted == false && Power == 0) {
                    return 6714;
                }

                if(Inverted == false && Power == 1) {
                    return 6715;
                }

                if(Inverted == false && Power == 2) {
                    return 6716;
                }

                if(Inverted == false && Power == 3) {
                    return 6717;
                }

                if(Inverted == false && Power == 4) {
                    return 6718;
                }

                if(Inverted == false && Power == 5) {
                    return 6719;
                }

                if(Inverted == false && Power == 6) {
                    return 6720;
                }

                if(Inverted == false && Power == 7) {
                    return 6721;
                }

                if(Inverted == false && Power == 8) {
                    return 6722;
                }

                if(Inverted == false && Power == 9) {
                    return 6723;
                }

                if(Inverted == false && Power == 10) {
                    return 6724;
                }

                if(Inverted == false && Power == 11) {
                    return 6725;
                }

                if(Inverted == false && Power == 12) {
                    return 6726;
                }

                if(Inverted == false && Power == 13) {
                    return 6727;
                }

                if(Inverted == false && Power == 14) {
                    return 6728;
                }

                if(Inverted == false && Power == 15) {
                    return 6729;
                }

                return DefaultState;
            }

            set {
                if(value == 6698) {
                    Inverted = true;
Power = 0;
                }

                if(value == 6699) {
                    Inverted = true;
Power = 1;
                }

                if(value == 6700) {
                    Inverted = true;
Power = 2;
                }

                if(value == 6701) {
                    Inverted = true;
Power = 3;
                }

                if(value == 6702) {
                    Inverted = true;
Power = 4;
                }

                if(value == 6703) {
                    Inverted = true;
Power = 5;
                }

                if(value == 6704) {
                    Inverted = true;
Power = 6;
                }

                if(value == 6705) {
                    Inverted = true;
Power = 7;
                }

                if(value == 6706) {
                    Inverted = true;
Power = 8;
                }

                if(value == 6707) {
                    Inverted = true;
Power = 9;
                }

                if(value == 6708) {
                    Inverted = true;
Power = 10;
                }

                if(value == 6709) {
                    Inverted = true;
Power = 11;
                }

                if(value == 6710) {
                    Inverted = true;
Power = 12;
                }

                if(value == 6711) {
                    Inverted = true;
Power = 13;
                }

                if(value == 6712) {
                    Inverted = true;
Power = 14;
                }

                if(value == 6713) {
                    Inverted = true;
Power = 15;
                }

                if(value == 6714) {
                    Inverted = false;
Power = 0;
                }

                if(value == 6715) {
                    Inverted = false;
Power = 1;
                }

                if(value == 6716) {
                    Inverted = false;
Power = 2;
                }

                if(value == 6717) {
                    Inverted = false;
Power = 3;
                }

                if(value == 6718) {
                    Inverted = false;
Power = 4;
                }

                if(value == 6719) {
                    Inverted = false;
Power = 5;
                }

                if(value == 6720) {
                    Inverted = false;
Power = 6;
                }

                if(value == 6721) {
                    Inverted = false;
Power = 7;
                }

                if(value == 6722) {
                    Inverted = false;
Power = 8;
                }

                if(value == 6723) {
                    Inverted = false;
Power = 9;
                }

                if(value == 6724) {
                    Inverted = false;
Power = 10;
                }

                if(value == 6725) {
                    Inverted = false;
Power = 11;
                }

                if(value == 6726) {
                    Inverted = false;
Power = 12;
                }

                if(value == 6727) {
                    Inverted = false;
Power = 13;
                }

                if(value == 6728) {
                    Inverted = false;
Power = 14;
                }

                if(value == 6729) {
                    Inverted = false;
Power = 15;
                }

            }
        }

        public bool Inverted { get; set; } = false;
        public int Power { get; set; } = 0;

        public BlockDaylightDetector() {
            State = DefaultState;
        }

        public BlockDaylightDetector(ushort state) : base(state) {
            if(state < MinimumState || state > MaximumState) {
                throw new ArgumentOutOfRangeException("state");
            }

            State = state;
        }

        public BlockDaylightDetector(bool inverted, int power) {
            Inverted = inverted;
            Power = power;
        }
    }
}