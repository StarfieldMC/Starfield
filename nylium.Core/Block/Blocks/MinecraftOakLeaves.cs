// FILE AUTOGENERATED. DO NOT MODIFY
using System;

namespace nylium.Core.Block.Blocks {

    public class BlockOakLeaves : BlockBase {

        public override string Id { get { return "minecraft:oak_leaves"; } }

        public override ushort MinimumState { get { return 145; } }
        public override ushort MaximumState { get { return 158; } }
        public override ushort DefaultState { get { return 158; } }

        public override ushort State {
            get {
                if(Distance == 1 && Persistent == true) {
                    return 145;
                }

                if(Distance == 1 && Persistent == false) {
                    return 146;
                }

                if(Distance == 2 && Persistent == true) {
                    return 147;
                }

                if(Distance == 2 && Persistent == false) {
                    return 148;
                }

                if(Distance == 3 && Persistent == true) {
                    return 149;
                }

                if(Distance == 3 && Persistent == false) {
                    return 150;
                }

                if(Distance == 4 && Persistent == true) {
                    return 151;
                }

                if(Distance == 4 && Persistent == false) {
                    return 152;
                }

                if(Distance == 5 && Persistent == true) {
                    return 153;
                }

                if(Distance == 5 && Persistent == false) {
                    return 154;
                }

                if(Distance == 6 && Persistent == true) {
                    return 155;
                }

                if(Distance == 6 && Persistent == false) {
                    return 156;
                }

                if(Distance == 7 && Persistent == true) {
                    return 157;
                }

                if(Distance == 7 && Persistent == false) {
                    return 158;
                }

                return DefaultState;
            }

            set {
                if(value == 145) {
                    Distance = 1;
Persistent = true;
                }

                if(value == 146) {
                    Distance = 1;
Persistent = false;
                }

                if(value == 147) {
                    Distance = 2;
Persistent = true;
                }

                if(value == 148) {
                    Distance = 2;
Persistent = false;
                }

                if(value == 149) {
                    Distance = 3;
Persistent = true;
                }

                if(value == 150) {
                    Distance = 3;
Persistent = false;
                }

                if(value == 151) {
                    Distance = 4;
Persistent = true;
                }

                if(value == 152) {
                    Distance = 4;
Persistent = false;
                }

                if(value == 153) {
                    Distance = 5;
Persistent = true;
                }

                if(value == 154) {
                    Distance = 5;
Persistent = false;
                }

                if(value == 155) {
                    Distance = 6;
Persistent = true;
                }

                if(value == 156) {
                    Distance = 6;
Persistent = false;
                }

                if(value == 157) {
                    Distance = 7;
Persistent = true;
                }

                if(value == 158) {
                    Distance = 7;
Persistent = false;
                }

            }
        }

        public int Distance { get; set; } = 7;
        public bool Persistent { get; set; } = false;

        public BlockOakLeaves() {
            State = DefaultState;
        }

        public BlockOakLeaves(ushort state) {
            if(state < MinimumState || state > MaximumState) {
                throw new ArgumentOutOfRangeException("state");
            }

            State = state;
        }

        public BlockOakLeaves(int distance, bool persistent) {
            Distance = distance;
            Persistent = persistent;
        }
    }
}