// FILE AUTOGENERATED. DO NOT MODIFY
using System;

namespace nylium.Core.Block.Blocks {

    [Block("minecraft:lime_bed", 80, 1129, 1144, 1132)]
    public class BlockLimeBed : BlockBase {

        public override ushort State {
            get {
                if(Facing == "north" && Occupied == true && Part == "head") {
                    return 1129;
                }

                if(Facing == "north" && Occupied == true && Part == "foot") {
                    return 1130;
                }

                if(Facing == "north" && Occupied == false && Part == "head") {
                    return 1131;
                }

                if(Facing == "north" && Occupied == false && Part == "foot") {
                    return 1132;
                }

                if(Facing == "south" && Occupied == true && Part == "head") {
                    return 1133;
                }

                if(Facing == "south" && Occupied == true && Part == "foot") {
                    return 1134;
                }

                if(Facing == "south" && Occupied == false && Part == "head") {
                    return 1135;
                }

                if(Facing == "south" && Occupied == false && Part == "foot") {
                    return 1136;
                }

                if(Facing == "west" && Occupied == true && Part == "head") {
                    return 1137;
                }

                if(Facing == "west" && Occupied == true && Part == "foot") {
                    return 1138;
                }

                if(Facing == "west" && Occupied == false && Part == "head") {
                    return 1139;
                }

                if(Facing == "west" && Occupied == false && Part == "foot") {
                    return 1140;
                }

                if(Facing == "east" && Occupied == true && Part == "head") {
                    return 1141;
                }

                if(Facing == "east" && Occupied == true && Part == "foot") {
                    return 1142;
                }

                if(Facing == "east" && Occupied == false && Part == "head") {
                    return 1143;
                }

                if(Facing == "east" && Occupied == false && Part == "foot") {
                    return 1144;
                }

                return DefaultState;
            }

            set {
                if(value == 1129) {
                    Facing = "north";
Occupied = true;
Part = "head";
                }

                if(value == 1130) {
                    Facing = "north";
Occupied = true;
Part = "foot";
                }

                if(value == 1131) {
                    Facing = "north";
Occupied = false;
Part = "head";
                }

                if(value == 1132) {
                    Facing = "north";
Occupied = false;
Part = "foot";
                }

                if(value == 1133) {
                    Facing = "south";
Occupied = true;
Part = "head";
                }

                if(value == 1134) {
                    Facing = "south";
Occupied = true;
Part = "foot";
                }

                if(value == 1135) {
                    Facing = "south";
Occupied = false;
Part = "head";
                }

                if(value == 1136) {
                    Facing = "south";
Occupied = false;
Part = "foot";
                }

                if(value == 1137) {
                    Facing = "west";
Occupied = true;
Part = "head";
                }

                if(value == 1138) {
                    Facing = "west";
Occupied = true;
Part = "foot";
                }

                if(value == 1139) {
                    Facing = "west";
Occupied = false;
Part = "head";
                }

                if(value == 1140) {
                    Facing = "west";
Occupied = false;
Part = "foot";
                }

                if(value == 1141) {
                    Facing = "east";
Occupied = true;
Part = "head";
                }

                if(value == 1142) {
                    Facing = "east";
Occupied = true;
Part = "foot";
                }

                if(value == 1143) {
                    Facing = "east";
Occupied = false;
Part = "head";
                }

                if(value == 1144) {
                    Facing = "east";
Occupied = false;
Part = "foot";
                }

            }
        }

        public string Facing { get; set; } = "north";
        public bool Occupied { get; set; } = false;
        public string Part { get; set; } = "foot";

        public BlockLimeBed() {
            State = DefaultState;
        }

        public BlockLimeBed(ushort state) : base(state) {
            if(state < MinimumState || state > MaximumState) {
                throw new ArgumentOutOfRangeException("state");
            }

            State = state;
        }

        public BlockLimeBed(string facing, bool occupied, string part) {
            Facing = facing;
            Occupied = occupied;
            Part = part;
        }
    }
}