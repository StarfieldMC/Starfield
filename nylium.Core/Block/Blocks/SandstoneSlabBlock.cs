// AUTOGENERATED. DO NOT MODIFY
using nylium.Core.Level;

namespace nylium.Core.Block.Blocks {

    public class SandstoneSlabBlock : BaseBlock {

        public BlockType Type { get; }
        public bool Waterlogged { get; }

        public SandstoneSlabBlock(Chunk chunk, int x, int y, int z) : base(chunk, x, y, z, 460, 8355) { }

        public SandstoneSlabBlock(Chunk chunk, int x, int y, int z, ushort state) : base(chunk, x, y, z, 460, state) {if(state == 8352) {
                Type = BlockType.Top;
                Waterlogged = true;
            } else if(state == 8353) {
                Type = BlockType.Top;
                Waterlogged = false;
            } else if(state == 8354) {
                Type = BlockType.Bottom;
                Waterlogged = true;
            } else if(state == 8355) {
                Type = BlockType.Bottom;
                Waterlogged = false;
            } else if(state == 8356) {
                Type = BlockType.Double;
                Waterlogged = true;
            } else if(state == 8357) {
                Type = BlockType.Double;
                Waterlogged = false;
            }
        }

        public SandstoneSlabBlock(Chunk chunk, int x, int y, int z, BlockType type, bool waterlogged) : base(chunk, x, y, z, 460, 8355) {
if(type == BlockType.Top && waterlogged == true) {
                State = 8352;
            } else if(type == BlockType.Top && waterlogged == false) {
                State = 8353;
            } else if(type == BlockType.Bottom && waterlogged == true) {
                State = 8354;
            } else if(type == BlockType.Bottom && waterlogged == false) {
                State = 8355;
            } else if(type == BlockType.Double && waterlogged == true) {
                State = 8356;
            } else if(type == BlockType.Double && waterlogged == false) {
                State = 8357;
            }
        }

        public enum BlockType {
            
            Top,
            Bottom,
            Double
        }
    }
}
