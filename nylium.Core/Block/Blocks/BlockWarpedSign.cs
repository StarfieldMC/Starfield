// FILE AUTOGENERATED. DO NOT MODIFY
using System;

namespace nylium.Core.Block.Blocks {

    [Block("minecraft:warped_sign", 723, 15695, 15726, 15696)]
    public class BlockWarpedSign : BlockBase {

        public override ushort State {
            get {
                if(Rotation == 0 && Waterlogged == true) {
                    return 15695;
                }

                if(Rotation == 0 && Waterlogged == false) {
                    return 15696;
                }

                if(Rotation == 1 && Waterlogged == true) {
                    return 15697;
                }

                if(Rotation == 1 && Waterlogged == false) {
                    return 15698;
                }

                if(Rotation == 2 && Waterlogged == true) {
                    return 15699;
                }

                if(Rotation == 2 && Waterlogged == false) {
                    return 15700;
                }

                if(Rotation == 3 && Waterlogged == true) {
                    return 15701;
                }

                if(Rotation == 3 && Waterlogged == false) {
                    return 15702;
                }

                if(Rotation == 4 && Waterlogged == true) {
                    return 15703;
                }

                if(Rotation == 4 && Waterlogged == false) {
                    return 15704;
                }

                if(Rotation == 5 && Waterlogged == true) {
                    return 15705;
                }

                if(Rotation == 5 && Waterlogged == false) {
                    return 15706;
                }

                if(Rotation == 6 && Waterlogged == true) {
                    return 15707;
                }

                if(Rotation == 6 && Waterlogged == false) {
                    return 15708;
                }

                if(Rotation == 7 && Waterlogged == true) {
                    return 15709;
                }

                if(Rotation == 7 && Waterlogged == false) {
                    return 15710;
                }

                if(Rotation == 8 && Waterlogged == true) {
                    return 15711;
                }

                if(Rotation == 8 && Waterlogged == false) {
                    return 15712;
                }

                if(Rotation == 9 && Waterlogged == true) {
                    return 15713;
                }

                if(Rotation == 9 && Waterlogged == false) {
                    return 15714;
                }

                if(Rotation == 10 && Waterlogged == true) {
                    return 15715;
                }

                if(Rotation == 10 && Waterlogged == false) {
                    return 15716;
                }

                if(Rotation == 11 && Waterlogged == true) {
                    return 15717;
                }

                if(Rotation == 11 && Waterlogged == false) {
                    return 15718;
                }

                if(Rotation == 12 && Waterlogged == true) {
                    return 15719;
                }

                if(Rotation == 12 && Waterlogged == false) {
                    return 15720;
                }

                if(Rotation == 13 && Waterlogged == true) {
                    return 15721;
                }

                if(Rotation == 13 && Waterlogged == false) {
                    return 15722;
                }

                if(Rotation == 14 && Waterlogged == true) {
                    return 15723;
                }

                if(Rotation == 14 && Waterlogged == false) {
                    return 15724;
                }

                if(Rotation == 15 && Waterlogged == true) {
                    return 15725;
                }

                if(Rotation == 15 && Waterlogged == false) {
                    return 15726;
                }

                return DefaultState;
            }

            set {
                if(value == 15695) {
                    Rotation = 0;
Waterlogged = true;
                }

                if(value == 15696) {
                    Rotation = 0;
Waterlogged = false;
                }

                if(value == 15697) {
                    Rotation = 1;
Waterlogged = true;
                }

                if(value == 15698) {
                    Rotation = 1;
Waterlogged = false;
                }

                if(value == 15699) {
                    Rotation = 2;
Waterlogged = true;
                }

                if(value == 15700) {
                    Rotation = 2;
Waterlogged = false;
                }

                if(value == 15701) {
                    Rotation = 3;
Waterlogged = true;
                }

                if(value == 15702) {
                    Rotation = 3;
Waterlogged = false;
                }

                if(value == 15703) {
                    Rotation = 4;
Waterlogged = true;
                }

                if(value == 15704) {
                    Rotation = 4;
Waterlogged = false;
                }

                if(value == 15705) {
                    Rotation = 5;
Waterlogged = true;
                }

                if(value == 15706) {
                    Rotation = 5;
Waterlogged = false;
                }

                if(value == 15707) {
                    Rotation = 6;
Waterlogged = true;
                }

                if(value == 15708) {
                    Rotation = 6;
Waterlogged = false;
                }

                if(value == 15709) {
                    Rotation = 7;
Waterlogged = true;
                }

                if(value == 15710) {
                    Rotation = 7;
Waterlogged = false;
                }

                if(value == 15711) {
                    Rotation = 8;
Waterlogged = true;
                }

                if(value == 15712) {
                    Rotation = 8;
Waterlogged = false;
                }

                if(value == 15713) {
                    Rotation = 9;
Waterlogged = true;
                }

                if(value == 15714) {
                    Rotation = 9;
Waterlogged = false;
                }

                if(value == 15715) {
                    Rotation = 10;
Waterlogged = true;
                }

                if(value == 15716) {
                    Rotation = 10;
Waterlogged = false;
                }

                if(value == 15717) {
                    Rotation = 11;
Waterlogged = true;
                }

                if(value == 15718) {
                    Rotation = 11;
Waterlogged = false;
                }

                if(value == 15719) {
                    Rotation = 12;
Waterlogged = true;
                }

                if(value == 15720) {
                    Rotation = 12;
Waterlogged = false;
                }

                if(value == 15721) {
                    Rotation = 13;
Waterlogged = true;
                }

                if(value == 15722) {
                    Rotation = 13;
Waterlogged = false;
                }

                if(value == 15723) {
                    Rotation = 14;
Waterlogged = true;
                }

                if(value == 15724) {
                    Rotation = 14;
Waterlogged = false;
                }

                if(value == 15725) {
                    Rotation = 15;
Waterlogged = true;
                }

                if(value == 15726) {
                    Rotation = 15;
Waterlogged = false;
                }

            }
        }

        public int Rotation { get; set; } = 0;
        public bool Waterlogged { get; set; } = false;

        public BlockWarpedSign() {
            State = DefaultState;
        }

        public BlockWarpedSign(ushort state) : base(state) {
            if(state < MinimumState || state > MaximumState) {
                throw new ArgumentOutOfRangeException("state");
            }

            State = state;
        }

        public BlockWarpedSign(int rotation, bool waterlogged) {
            Rotation = rotation;
            Waterlogged = waterlogged;
        }
    }
}