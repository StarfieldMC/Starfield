// FILE AUTOGENERATED. DO NOT MODIFY
using System;

namespace nylium.Core.Block.Blocks {

    [Block("minecraft:red_bed", 89, 1273, 1288, 1276)]
    public class BlockRedBed : BlockBase {

        public override ushort State {
            get {
                if(Facing == "north" && Occupied == true && Part == "head") {
                    return 1273;
                }

                if(Facing == "north" && Occupied == true && Part == "foot") {
                    return 1274;
                }

                if(Facing == "north" && Occupied == false && Part == "head") {
                    return 1275;
                }

                if(Facing == "north" && Occupied == false && Part == "foot") {
                    return 1276;
                }

                if(Facing == "south" && Occupied == true && Part == "head") {
                    return 1277;
                }

                if(Facing == "south" && Occupied == true && Part == "foot") {
                    return 1278;
                }

                if(Facing == "south" && Occupied == false && Part == "head") {
                    return 1279;
                }

                if(Facing == "south" && Occupied == false && Part == "foot") {
                    return 1280;
                }

                if(Facing == "west" && Occupied == true && Part == "head") {
                    return 1281;
                }

                if(Facing == "west" && Occupied == true && Part == "foot") {
                    return 1282;
                }

                if(Facing == "west" && Occupied == false && Part == "head") {
                    return 1283;
                }

                if(Facing == "west" && Occupied == false && Part == "foot") {
                    return 1284;
                }

                if(Facing == "east" && Occupied == true && Part == "head") {
                    return 1285;
                }

                if(Facing == "east" && Occupied == true && Part == "foot") {
                    return 1286;
                }

                if(Facing == "east" && Occupied == false && Part == "head") {
                    return 1287;
                }

                if(Facing == "east" && Occupied == false && Part == "foot") {
                    return 1288;
                }

                return DefaultState;
            }

            set {
                if(value == 1273) {
                    Facing = "north";
Occupied = true;
Part = "head";
                }

                if(value == 1274) {
                    Facing = "north";
Occupied = true;
Part = "foot";
                }

                if(value == 1275) {
                    Facing = "north";
Occupied = false;
Part = "head";
                }

                if(value == 1276) {
                    Facing = "north";
Occupied = false;
Part = "foot";
                }

                if(value == 1277) {
                    Facing = "south";
Occupied = true;
Part = "head";
                }

                if(value == 1278) {
                    Facing = "south";
Occupied = true;
Part = "foot";
                }

                if(value == 1279) {
                    Facing = "south";
Occupied = false;
Part = "head";
                }

                if(value == 1280) {
                    Facing = "south";
Occupied = false;
Part = "foot";
                }

                if(value == 1281) {
                    Facing = "west";
Occupied = true;
Part = "head";
                }

                if(value == 1282) {
                    Facing = "west";
Occupied = true;
Part = "foot";
                }

                if(value == 1283) {
                    Facing = "west";
Occupied = false;
Part = "head";
                }

                if(value == 1284) {
                    Facing = "west";
Occupied = false;
Part = "foot";
                }

                if(value == 1285) {
                    Facing = "east";
Occupied = true;
Part = "head";
                }

                if(value == 1286) {
                    Facing = "east";
Occupied = true;
Part = "foot";
                }

                if(value == 1287) {
                    Facing = "east";
Occupied = false;
Part = "head";
                }

                if(value == 1288) {
                    Facing = "east";
Occupied = false;
Part = "foot";
                }

            }
        }

        public string Facing { get; set; } = "north";
        public bool Occupied { get; set; } = false;
        public string Part { get; set; } = "foot";

        public BlockRedBed() {
            State = DefaultState;
        }

        public BlockRedBed(ushort state) : base(state) {
            if(state < MinimumState || state > MaximumState) {
                throw new ArgumentOutOfRangeException("state");
            }

            State = state;
        }

        public BlockRedBed(string facing, bool occupied, string part) {
            Facing = facing;
            Occupied = occupied;
            Part = part;
        }
    }
}