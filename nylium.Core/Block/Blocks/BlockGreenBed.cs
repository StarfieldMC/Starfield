// FILE AUTOGENERATED. DO NOT MODIFY
using System;

namespace nylium.Core.Block.Blocks {

    [Block("minecraft:green_bed", 88, 1257, 1272, 1260)]
    public class BlockGreenBed : BlockBase {

        public override ushort State {
            get {
                if(Facing == "north" && Occupied == true && Part == "head") {
                    return 1257;
                }

                if(Facing == "north" && Occupied == true && Part == "foot") {
                    return 1258;
                }

                if(Facing == "north" && Occupied == false && Part == "head") {
                    return 1259;
                }

                if(Facing == "north" && Occupied == false && Part == "foot") {
                    return 1260;
                }

                if(Facing == "south" && Occupied == true && Part == "head") {
                    return 1261;
                }

                if(Facing == "south" && Occupied == true && Part == "foot") {
                    return 1262;
                }

                if(Facing == "south" && Occupied == false && Part == "head") {
                    return 1263;
                }

                if(Facing == "south" && Occupied == false && Part == "foot") {
                    return 1264;
                }

                if(Facing == "west" && Occupied == true && Part == "head") {
                    return 1265;
                }

                if(Facing == "west" && Occupied == true && Part == "foot") {
                    return 1266;
                }

                if(Facing == "west" && Occupied == false && Part == "head") {
                    return 1267;
                }

                if(Facing == "west" && Occupied == false && Part == "foot") {
                    return 1268;
                }

                if(Facing == "east" && Occupied == true && Part == "head") {
                    return 1269;
                }

                if(Facing == "east" && Occupied == true && Part == "foot") {
                    return 1270;
                }

                if(Facing == "east" && Occupied == false && Part == "head") {
                    return 1271;
                }

                if(Facing == "east" && Occupied == false && Part == "foot") {
                    return 1272;
                }

                return DefaultState;
            }

            set {
                if(value == 1257) {
                    Facing = "north";
Occupied = true;
Part = "head";
                }

                if(value == 1258) {
                    Facing = "north";
Occupied = true;
Part = "foot";
                }

                if(value == 1259) {
                    Facing = "north";
Occupied = false;
Part = "head";
                }

                if(value == 1260) {
                    Facing = "north";
Occupied = false;
Part = "foot";
                }

                if(value == 1261) {
                    Facing = "south";
Occupied = true;
Part = "head";
                }

                if(value == 1262) {
                    Facing = "south";
Occupied = true;
Part = "foot";
                }

                if(value == 1263) {
                    Facing = "south";
Occupied = false;
Part = "head";
                }

                if(value == 1264) {
                    Facing = "south";
Occupied = false;
Part = "foot";
                }

                if(value == 1265) {
                    Facing = "west";
Occupied = true;
Part = "head";
                }

                if(value == 1266) {
                    Facing = "west";
Occupied = true;
Part = "foot";
                }

                if(value == 1267) {
                    Facing = "west";
Occupied = false;
Part = "head";
                }

                if(value == 1268) {
                    Facing = "west";
Occupied = false;
Part = "foot";
                }

                if(value == 1269) {
                    Facing = "east";
Occupied = true;
Part = "head";
                }

                if(value == 1270) {
                    Facing = "east";
Occupied = true;
Part = "foot";
                }

                if(value == 1271) {
                    Facing = "east";
Occupied = false;
Part = "head";
                }

                if(value == 1272) {
                    Facing = "east";
Occupied = false;
Part = "foot";
                }

            }
        }

        public string Facing { get; set; } = "north";
        public bool Occupied { get; set; } = false;
        public string Part { get; set; } = "foot";

        public BlockGreenBed() {
            State = DefaultState;
        }

        public BlockGreenBed(ushort state) : base(state) {
            if(state < MinimumState || state > MaximumState) {
                throw new ArgumentOutOfRangeException("state");
            }

            State = state;
        }

        public BlockGreenBed(string facing, bool occupied, string part) {
            Facing = facing;
            Occupied = occupied;
            Part = part;
        }
    }
}