// AUTOGENERATED. DO NOT MODIFY
using nylium.Core.Level;

namespace nylium.Core.Block.Blocks {

    public class OakLeavesBlock : BaseBlock {

        public int Distance { get; }
        public bool Persistent { get; }

        public OakLeavesBlock(Chunk chunk, int x, int y, int z) : base(chunk, x, y, z, 59, 158) { }

        public OakLeavesBlock(Chunk chunk, int x, int y, int z, ushort state) : base(chunk, x, y, z, 59, state) {
            if(state == 145) {
                Distance = 1;
                Persistent = true;
            } else if(state == 146) {
                Distance = 1;
                Persistent = false;
            } else if(state == 147) {
                Distance = 2;
                Persistent = true;
            } else if(state == 148) {
                Distance = 2;
                Persistent = false;
            } else if(state == 149) {
                Distance = 3;
                Persistent = true;
            } else if(state == 150) {
                Distance = 3;
                Persistent = false;
            } else if(state == 151) {
                Distance = 4;
                Persistent = true;
            } else if(state == 152) {
                Distance = 4;
                Persistent = false;
            } else if(state == 153) {
                Distance = 5;
                Persistent = true;
            } else if(state == 154) {
                Distance = 5;
                Persistent = false;
            } else if(state == 155) {
                Distance = 6;
                Persistent = true;
            } else if(state == 156) {
                Distance = 6;
                Persistent = false;
            } else if(state == 157) {
                Distance = 7;
                Persistent = true;
            } else if(state == 158) {
                Distance = 7;
                Persistent = false;
            }
        }

        public OakLeavesBlock(Chunk chunk, int x, int y, int z, int distance, bool persistent) : base(chunk, x, y, z, 59, 158) {
if(distance == 1 && persistent == true) {
                State = 145;
            } else if(distance == 1 && persistent == false) {
                State = 146;
            } else if(distance == 2 && persistent == true) {
                State = 147;
            } else if(distance == 2 && persistent == false) {
                State = 148;
            } else if(distance == 3 && persistent == true) {
                State = 149;
            } else if(distance == 3 && persistent == false) {
                State = 150;
            } else if(distance == 4 && persistent == true) {
                State = 151;
            } else if(distance == 4 && persistent == false) {
                State = 152;
            } else if(distance == 5 && persistent == true) {
                State = 153;
            } else if(distance == 5 && persistent == false) {
                State = 154;
            } else if(distance == 6 && persistent == true) {
                State = 155;
            } else if(distance == 6 && persistent == false) {
                State = 156;
            } else if(distance == 7 && persistent == true) {
                State = 157;
            } else if(distance == 7 && persistent == false) {
                State = 158;
            }
        }
    }
}
