// FILE AUTOGENERATED. DO NOT MODIFY
using System;

namespace nylium.Core.Block.Blocks {

    [Block("minecraft:dark_oak_sign", 160, 3541, 3572, 3542)]
    public class BlockDarkOakSign : BlockBase {

        public override ushort State {
            get {
                if(Rotation == 0 && Waterlogged == true) {
                    return 3541;
                }

                if(Rotation == 0 && Waterlogged == false) {
                    return 3542;
                }

                if(Rotation == 1 && Waterlogged == true) {
                    return 3543;
                }

                if(Rotation == 1 && Waterlogged == false) {
                    return 3544;
                }

                if(Rotation == 2 && Waterlogged == true) {
                    return 3545;
                }

                if(Rotation == 2 && Waterlogged == false) {
                    return 3546;
                }

                if(Rotation == 3 && Waterlogged == true) {
                    return 3547;
                }

                if(Rotation == 3 && Waterlogged == false) {
                    return 3548;
                }

                if(Rotation == 4 && Waterlogged == true) {
                    return 3549;
                }

                if(Rotation == 4 && Waterlogged == false) {
                    return 3550;
                }

                if(Rotation == 5 && Waterlogged == true) {
                    return 3551;
                }

                if(Rotation == 5 && Waterlogged == false) {
                    return 3552;
                }

                if(Rotation == 6 && Waterlogged == true) {
                    return 3553;
                }

                if(Rotation == 6 && Waterlogged == false) {
                    return 3554;
                }

                if(Rotation == 7 && Waterlogged == true) {
                    return 3555;
                }

                if(Rotation == 7 && Waterlogged == false) {
                    return 3556;
                }

                if(Rotation == 8 && Waterlogged == true) {
                    return 3557;
                }

                if(Rotation == 8 && Waterlogged == false) {
                    return 3558;
                }

                if(Rotation == 9 && Waterlogged == true) {
                    return 3559;
                }

                if(Rotation == 9 && Waterlogged == false) {
                    return 3560;
                }

                if(Rotation == 10 && Waterlogged == true) {
                    return 3561;
                }

                if(Rotation == 10 && Waterlogged == false) {
                    return 3562;
                }

                if(Rotation == 11 && Waterlogged == true) {
                    return 3563;
                }

                if(Rotation == 11 && Waterlogged == false) {
                    return 3564;
                }

                if(Rotation == 12 && Waterlogged == true) {
                    return 3565;
                }

                if(Rotation == 12 && Waterlogged == false) {
                    return 3566;
                }

                if(Rotation == 13 && Waterlogged == true) {
                    return 3567;
                }

                if(Rotation == 13 && Waterlogged == false) {
                    return 3568;
                }

                if(Rotation == 14 && Waterlogged == true) {
                    return 3569;
                }

                if(Rotation == 14 && Waterlogged == false) {
                    return 3570;
                }

                if(Rotation == 15 && Waterlogged == true) {
                    return 3571;
                }

                if(Rotation == 15 && Waterlogged == false) {
                    return 3572;
                }

                return DefaultState;
            }

            set {
                if(value == 3541) {
                    Rotation = 0;
Waterlogged = true;
                }

                if(value == 3542) {
                    Rotation = 0;
Waterlogged = false;
                }

                if(value == 3543) {
                    Rotation = 1;
Waterlogged = true;
                }

                if(value == 3544) {
                    Rotation = 1;
Waterlogged = false;
                }

                if(value == 3545) {
                    Rotation = 2;
Waterlogged = true;
                }

                if(value == 3546) {
                    Rotation = 2;
Waterlogged = false;
                }

                if(value == 3547) {
                    Rotation = 3;
Waterlogged = true;
                }

                if(value == 3548) {
                    Rotation = 3;
Waterlogged = false;
                }

                if(value == 3549) {
                    Rotation = 4;
Waterlogged = true;
                }

                if(value == 3550) {
                    Rotation = 4;
Waterlogged = false;
                }

                if(value == 3551) {
                    Rotation = 5;
Waterlogged = true;
                }

                if(value == 3552) {
                    Rotation = 5;
Waterlogged = false;
                }

                if(value == 3553) {
                    Rotation = 6;
Waterlogged = true;
                }

                if(value == 3554) {
                    Rotation = 6;
Waterlogged = false;
                }

                if(value == 3555) {
                    Rotation = 7;
Waterlogged = true;
                }

                if(value == 3556) {
                    Rotation = 7;
Waterlogged = false;
                }

                if(value == 3557) {
                    Rotation = 8;
Waterlogged = true;
                }

                if(value == 3558) {
                    Rotation = 8;
Waterlogged = false;
                }

                if(value == 3559) {
                    Rotation = 9;
Waterlogged = true;
                }

                if(value == 3560) {
                    Rotation = 9;
Waterlogged = false;
                }

                if(value == 3561) {
                    Rotation = 10;
Waterlogged = true;
                }

                if(value == 3562) {
                    Rotation = 10;
Waterlogged = false;
                }

                if(value == 3563) {
                    Rotation = 11;
Waterlogged = true;
                }

                if(value == 3564) {
                    Rotation = 11;
Waterlogged = false;
                }

                if(value == 3565) {
                    Rotation = 12;
Waterlogged = true;
                }

                if(value == 3566) {
                    Rotation = 12;
Waterlogged = false;
                }

                if(value == 3567) {
                    Rotation = 13;
Waterlogged = true;
                }

                if(value == 3568) {
                    Rotation = 13;
Waterlogged = false;
                }

                if(value == 3569) {
                    Rotation = 14;
Waterlogged = true;
                }

                if(value == 3570) {
                    Rotation = 14;
Waterlogged = false;
                }

                if(value == 3571) {
                    Rotation = 15;
Waterlogged = true;
                }

                if(value == 3572) {
                    Rotation = 15;
Waterlogged = false;
                }

            }
        }

        public int Rotation { get; set; } = 0;
        public bool Waterlogged { get; set; } = false;

        public BlockDarkOakSign() {
            State = DefaultState;
        }

        public BlockDarkOakSign(ushort state) : base(state) {
            if(state < MinimumState || state > MaximumState) {
                throw new ArgumentOutOfRangeException("state");
            }

            State = state;
        }

        public BlockDarkOakSign(int rotation, bool waterlogged) {
            Rotation = rotation;
            Waterlogged = waterlogged;
        }
    }
}