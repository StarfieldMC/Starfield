// FILE AUTOGENERATED. DO NOT MODIFY
using System;

namespace nylium.Core.Block.Blocks {

    public class BlockBrownBanner : BlockBase {

        public override string Id { get { return "minecraft:brown_banner"; } }

        public override ushort MinimumState { get { return 8093; } }
        public override ushort MaximumState { get { return 8108; } }
        public override ushort DefaultState { get { return 8093; } }

        public override ushort State {
            get {
                if(Rotation == 0) {
                    return 8093;
                }

                if(Rotation == 1) {
                    return 8094;
                }

                if(Rotation == 2) {
                    return 8095;
                }

                if(Rotation == 3) {
                    return 8096;
                }

                if(Rotation == 4) {
                    return 8097;
                }

                if(Rotation == 5) {
                    return 8098;
                }

                if(Rotation == 6) {
                    return 8099;
                }

                if(Rotation == 7) {
                    return 8100;
                }

                if(Rotation == 8) {
                    return 8101;
                }

                if(Rotation == 9) {
                    return 8102;
                }

                if(Rotation == 10) {
                    return 8103;
                }

                if(Rotation == 11) {
                    return 8104;
                }

                if(Rotation == 12) {
                    return 8105;
                }

                if(Rotation == 13) {
                    return 8106;
                }

                if(Rotation == 14) {
                    return 8107;
                }

                if(Rotation == 15) {
                    return 8108;
                }

                return DefaultState;
            }

            set {
                if(value == 8093) {
                    Rotation = 0;
                }

                if(value == 8094) {
                    Rotation = 1;
                }

                if(value == 8095) {
                    Rotation = 2;
                }

                if(value == 8096) {
                    Rotation = 3;
                }

                if(value == 8097) {
                    Rotation = 4;
                }

                if(value == 8098) {
                    Rotation = 5;
                }

                if(value == 8099) {
                    Rotation = 6;
                }

                if(value == 8100) {
                    Rotation = 7;
                }

                if(value == 8101) {
                    Rotation = 8;
                }

                if(value == 8102) {
                    Rotation = 9;
                }

                if(value == 8103) {
                    Rotation = 10;
                }

                if(value == 8104) {
                    Rotation = 11;
                }

                if(value == 8105) {
                    Rotation = 12;
                }

                if(value == 8106) {
                    Rotation = 13;
                }

                if(value == 8107) {
                    Rotation = 14;
                }

                if(value == 8108) {
                    Rotation = 15;
                }

            }
        }

        public int Rotation { get; set; } = 0;

        public BlockBrownBanner() {
            State = DefaultState;
        }

        public BlockBrownBanner(ushort state) {
            if(state < MinimumState || state > MaximumState) {
                throw new ArgumentOutOfRangeException("state");
            }

            State = state;
        }

        public BlockBrownBanner(int rotation) {
            Rotation = rotation;
        }
    }
}