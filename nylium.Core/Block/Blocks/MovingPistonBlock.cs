// AUTOGENERATED. DO NOT MODIFY
using nylium.Core.Level;

namespace nylium.Core.Block.Blocks {

    public class MovingPistonBlock : BaseBlock {

        public Face Facing { get; }
        public BlockType Type { get; }

        public MovingPistonBlock(Chunk chunk, int x, int y, int z) : base(chunk, x, y, z, 118, 1400) { }

        public MovingPistonBlock(Chunk chunk, int x, int y, int z, ushort state) : base(chunk, x, y, z, 118, state) {if(state == 1400) {
                Facing = Face.North;
                Type = BlockType.Normal;
            } else if(state == 1401) {
                Facing = Face.North;
                Type = BlockType.Sticky;
            } else if(state == 1402) {
                Facing = Face.East;
                Type = BlockType.Normal;
            } else if(state == 1403) {
                Facing = Face.East;
                Type = BlockType.Sticky;
            } else if(state == 1404) {
                Facing = Face.South;
                Type = BlockType.Normal;
            } else if(state == 1405) {
                Facing = Face.South;
                Type = BlockType.Sticky;
            } else if(state == 1406) {
                Facing = Face.West;
                Type = BlockType.Normal;
            } else if(state == 1407) {
                Facing = Face.West;
                Type = BlockType.Sticky;
            } else if(state == 1408) {
                Facing = Face.Up;
                Type = BlockType.Normal;
            } else if(state == 1409) {
                Facing = Face.Up;
                Type = BlockType.Sticky;
            } else if(state == 1410) {
                Facing = Face.Down;
                Type = BlockType.Normal;
            } else if(state == 1411) {
                Facing = Face.Down;
                Type = BlockType.Sticky;
            }
        }

        public MovingPistonBlock(Chunk chunk, int x, int y, int z, Face facing, BlockType type) : base(chunk, x, y, z, 118, 1400) {
if(facing == Face.North && type == BlockType.Normal) {
                State = 1400;
            } else if(facing == Face.North && type == BlockType.Sticky) {
                State = 1401;
            } else if(facing == Face.East && type == BlockType.Normal) {
                State = 1402;
            } else if(facing == Face.East && type == BlockType.Sticky) {
                State = 1403;
            } else if(facing == Face.South && type == BlockType.Normal) {
                State = 1404;
            } else if(facing == Face.South && type == BlockType.Sticky) {
                State = 1405;
            } else if(facing == Face.West && type == BlockType.Normal) {
                State = 1406;
            } else if(facing == Face.West && type == BlockType.Sticky) {
                State = 1407;
            } else if(facing == Face.Up && type == BlockType.Normal) {
                State = 1408;
            } else if(facing == Face.Up && type == BlockType.Sticky) {
                State = 1409;
            } else if(facing == Face.Down && type == BlockType.Normal) {
                State = 1410;
            } else if(facing == Face.Down && type == BlockType.Sticky) {
                State = 1411;
            }
        }

        public enum BlockType {

            Normal,
            Sticky
        }
    }
}
