// FILE AUTOGENERATED. DO NOT MODIFY
using System;

namespace nylium.Core.Block.Blocks {

    public class BlockBeeNest : BlockBase {

        public override string Id { get { return "minecraft:bee_nest"; } }

        public override ushort MinimumState { get { return 15784; } }
        public override ushort MaximumState { get { return 15807; } }
        public override ushort DefaultState { get { return 15784; } }

        public override ushort State {
            get {
                if(Facing == "north" && HoneyLevel == 0) {
                    return 15784;
                }

                if(Facing == "north" && HoneyLevel == 1) {
                    return 15785;
                }

                if(Facing == "north" && HoneyLevel == 2) {
                    return 15786;
                }

                if(Facing == "north" && HoneyLevel == 3) {
                    return 15787;
                }

                if(Facing == "north" && HoneyLevel == 4) {
                    return 15788;
                }

                if(Facing == "north" && HoneyLevel == 5) {
                    return 15789;
                }

                if(Facing == "south" && HoneyLevel == 0) {
                    return 15790;
                }

                if(Facing == "south" && HoneyLevel == 1) {
                    return 15791;
                }

                if(Facing == "south" && HoneyLevel == 2) {
                    return 15792;
                }

                if(Facing == "south" && HoneyLevel == 3) {
                    return 15793;
                }

                if(Facing == "south" && HoneyLevel == 4) {
                    return 15794;
                }

                if(Facing == "south" && HoneyLevel == 5) {
                    return 15795;
                }

                if(Facing == "west" && HoneyLevel == 0) {
                    return 15796;
                }

                if(Facing == "west" && HoneyLevel == 1) {
                    return 15797;
                }

                if(Facing == "west" && HoneyLevel == 2) {
                    return 15798;
                }

                if(Facing == "west" && HoneyLevel == 3) {
                    return 15799;
                }

                if(Facing == "west" && HoneyLevel == 4) {
                    return 15800;
                }

                if(Facing == "west" && HoneyLevel == 5) {
                    return 15801;
                }

                if(Facing == "east" && HoneyLevel == 0) {
                    return 15802;
                }

                if(Facing == "east" && HoneyLevel == 1) {
                    return 15803;
                }

                if(Facing == "east" && HoneyLevel == 2) {
                    return 15804;
                }

                if(Facing == "east" && HoneyLevel == 3) {
                    return 15805;
                }

                if(Facing == "east" && HoneyLevel == 4) {
                    return 15806;
                }

                if(Facing == "east" && HoneyLevel == 5) {
                    return 15807;
                }

                return DefaultState;
            }

            set {
                if(value == 15784) {
                    Facing = "north";
HoneyLevel = 0;
                }

                if(value == 15785) {
                    Facing = "north";
HoneyLevel = 1;
                }

                if(value == 15786) {
                    Facing = "north";
HoneyLevel = 2;
                }

                if(value == 15787) {
                    Facing = "north";
HoneyLevel = 3;
                }

                if(value == 15788) {
                    Facing = "north";
HoneyLevel = 4;
                }

                if(value == 15789) {
                    Facing = "north";
HoneyLevel = 5;
                }

                if(value == 15790) {
                    Facing = "south";
HoneyLevel = 0;
                }

                if(value == 15791) {
                    Facing = "south";
HoneyLevel = 1;
                }

                if(value == 15792) {
                    Facing = "south";
HoneyLevel = 2;
                }

                if(value == 15793) {
                    Facing = "south";
HoneyLevel = 3;
                }

                if(value == 15794) {
                    Facing = "south";
HoneyLevel = 4;
                }

                if(value == 15795) {
                    Facing = "south";
HoneyLevel = 5;
                }

                if(value == 15796) {
                    Facing = "west";
HoneyLevel = 0;
                }

                if(value == 15797) {
                    Facing = "west";
HoneyLevel = 1;
                }

                if(value == 15798) {
                    Facing = "west";
HoneyLevel = 2;
                }

                if(value == 15799) {
                    Facing = "west";
HoneyLevel = 3;
                }

                if(value == 15800) {
                    Facing = "west";
HoneyLevel = 4;
                }

                if(value == 15801) {
                    Facing = "west";
HoneyLevel = 5;
                }

                if(value == 15802) {
                    Facing = "east";
HoneyLevel = 0;
                }

                if(value == 15803) {
                    Facing = "east";
HoneyLevel = 1;
                }

                if(value == 15804) {
                    Facing = "east";
HoneyLevel = 2;
                }

                if(value == 15805) {
                    Facing = "east";
HoneyLevel = 3;
                }

                if(value == 15806) {
                    Facing = "east";
HoneyLevel = 4;
                }

                if(value == 15807) {
                    Facing = "east";
HoneyLevel = 5;
                }

            }
        }

        public string Facing { get; set; } = "north";
        public int HoneyLevel { get; set; } = 0;

        public BlockBeeNest() {
            State = DefaultState;
        }

        public BlockBeeNest(ushort state) {
            if(state < MinimumState || state > MaximumState) {
                throw new ArgumentOutOfRangeException("state");
            }

            State = state;
        }

        public BlockBeeNest(string facing, int honey_level) {
            Facing = facing;
            HoneyLevel = honey_level;
        }
    }
}