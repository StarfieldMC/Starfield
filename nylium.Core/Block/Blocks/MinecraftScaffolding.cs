// FILE AUTOGENERATED. DO NOT MODIFY
using System;

namespace nylium.Core.Block.Blocks {

    public class BlockScaffolding : BlockBase {

        public override string Id { get { return "minecraft:scaffolding"; } }

        public override ushort MinimumState { get { return 14759; } }
        public override ushort MaximumState { get { return 14790; } }
        public override ushort DefaultState { get { return 14790; } }

        public override ushort State {
            get {
                if(Bottom == true && Distance == 0 && Waterlogged == true) {
                    return 14759;
                }

                if(Bottom == true && Distance == 0 && Waterlogged == false) {
                    return 14760;
                }

                if(Bottom == true && Distance == 1 && Waterlogged == true) {
                    return 14761;
                }

                if(Bottom == true && Distance == 1 && Waterlogged == false) {
                    return 14762;
                }

                if(Bottom == true && Distance == 2 && Waterlogged == true) {
                    return 14763;
                }

                if(Bottom == true && Distance == 2 && Waterlogged == false) {
                    return 14764;
                }

                if(Bottom == true && Distance == 3 && Waterlogged == true) {
                    return 14765;
                }

                if(Bottom == true && Distance == 3 && Waterlogged == false) {
                    return 14766;
                }

                if(Bottom == true && Distance == 4 && Waterlogged == true) {
                    return 14767;
                }

                if(Bottom == true && Distance == 4 && Waterlogged == false) {
                    return 14768;
                }

                if(Bottom == true && Distance == 5 && Waterlogged == true) {
                    return 14769;
                }

                if(Bottom == true && Distance == 5 && Waterlogged == false) {
                    return 14770;
                }

                if(Bottom == true && Distance == 6 && Waterlogged == true) {
                    return 14771;
                }

                if(Bottom == true && Distance == 6 && Waterlogged == false) {
                    return 14772;
                }

                if(Bottom == true && Distance == 7 && Waterlogged == true) {
                    return 14773;
                }

                if(Bottom == true && Distance == 7 && Waterlogged == false) {
                    return 14774;
                }

                if(Bottom == false && Distance == 0 && Waterlogged == true) {
                    return 14775;
                }

                if(Bottom == false && Distance == 0 && Waterlogged == false) {
                    return 14776;
                }

                if(Bottom == false && Distance == 1 && Waterlogged == true) {
                    return 14777;
                }

                if(Bottom == false && Distance == 1 && Waterlogged == false) {
                    return 14778;
                }

                if(Bottom == false && Distance == 2 && Waterlogged == true) {
                    return 14779;
                }

                if(Bottom == false && Distance == 2 && Waterlogged == false) {
                    return 14780;
                }

                if(Bottom == false && Distance == 3 && Waterlogged == true) {
                    return 14781;
                }

                if(Bottom == false && Distance == 3 && Waterlogged == false) {
                    return 14782;
                }

                if(Bottom == false && Distance == 4 && Waterlogged == true) {
                    return 14783;
                }

                if(Bottom == false && Distance == 4 && Waterlogged == false) {
                    return 14784;
                }

                if(Bottom == false && Distance == 5 && Waterlogged == true) {
                    return 14785;
                }

                if(Bottom == false && Distance == 5 && Waterlogged == false) {
                    return 14786;
                }

                if(Bottom == false && Distance == 6 && Waterlogged == true) {
                    return 14787;
                }

                if(Bottom == false && Distance == 6 && Waterlogged == false) {
                    return 14788;
                }

                if(Bottom == false && Distance == 7 && Waterlogged == true) {
                    return 14789;
                }

                if(Bottom == false && Distance == 7 && Waterlogged == false) {
                    return 14790;
                }

                return DefaultState;
            }

            set {
                if(value == 14759) {
                    Bottom = true;
Distance = 0;
Waterlogged = true;
                }

                if(value == 14760) {
                    Bottom = true;
Distance = 0;
Waterlogged = false;
                }

                if(value == 14761) {
                    Bottom = true;
Distance = 1;
Waterlogged = true;
                }

                if(value == 14762) {
                    Bottom = true;
Distance = 1;
Waterlogged = false;
                }

                if(value == 14763) {
                    Bottom = true;
Distance = 2;
Waterlogged = true;
                }

                if(value == 14764) {
                    Bottom = true;
Distance = 2;
Waterlogged = false;
                }

                if(value == 14765) {
                    Bottom = true;
Distance = 3;
Waterlogged = true;
                }

                if(value == 14766) {
                    Bottom = true;
Distance = 3;
Waterlogged = false;
                }

                if(value == 14767) {
                    Bottom = true;
Distance = 4;
Waterlogged = true;
                }

                if(value == 14768) {
                    Bottom = true;
Distance = 4;
Waterlogged = false;
                }

                if(value == 14769) {
                    Bottom = true;
Distance = 5;
Waterlogged = true;
                }

                if(value == 14770) {
                    Bottom = true;
Distance = 5;
Waterlogged = false;
                }

                if(value == 14771) {
                    Bottom = true;
Distance = 6;
Waterlogged = true;
                }

                if(value == 14772) {
                    Bottom = true;
Distance = 6;
Waterlogged = false;
                }

                if(value == 14773) {
                    Bottom = true;
Distance = 7;
Waterlogged = true;
                }

                if(value == 14774) {
                    Bottom = true;
Distance = 7;
Waterlogged = false;
                }

                if(value == 14775) {
                    Bottom = false;
Distance = 0;
Waterlogged = true;
                }

                if(value == 14776) {
                    Bottom = false;
Distance = 0;
Waterlogged = false;
                }

                if(value == 14777) {
                    Bottom = false;
Distance = 1;
Waterlogged = true;
                }

                if(value == 14778) {
                    Bottom = false;
Distance = 1;
Waterlogged = false;
                }

                if(value == 14779) {
                    Bottom = false;
Distance = 2;
Waterlogged = true;
                }

                if(value == 14780) {
                    Bottom = false;
Distance = 2;
Waterlogged = false;
                }

                if(value == 14781) {
                    Bottom = false;
Distance = 3;
Waterlogged = true;
                }

                if(value == 14782) {
                    Bottom = false;
Distance = 3;
Waterlogged = false;
                }

                if(value == 14783) {
                    Bottom = false;
Distance = 4;
Waterlogged = true;
                }

                if(value == 14784) {
                    Bottom = false;
Distance = 4;
Waterlogged = false;
                }

                if(value == 14785) {
                    Bottom = false;
Distance = 5;
Waterlogged = true;
                }

                if(value == 14786) {
                    Bottom = false;
Distance = 5;
Waterlogged = false;
                }

                if(value == 14787) {
                    Bottom = false;
Distance = 6;
Waterlogged = true;
                }

                if(value == 14788) {
                    Bottom = false;
Distance = 6;
Waterlogged = false;
                }

                if(value == 14789) {
                    Bottom = false;
Distance = 7;
Waterlogged = true;
                }

                if(value == 14790) {
                    Bottom = false;
Distance = 7;
Waterlogged = false;
                }

            }
        }

        public bool Bottom { get; set; } = false;
        public int Distance { get; set; } = 7;
        public bool Waterlogged { get; set; } = false;

        public BlockScaffolding() {
            State = DefaultState;
        }

        public BlockScaffolding(ushort state) {
            if(state < MinimumState || state > MaximumState) {
                throw new ArgumentOutOfRangeException("state");
            }

            State = state;
        }

        public BlockScaffolding(bool bottom, int distance, bool waterlogged) {
            Bottom = bottom;
            Distance = distance;
            Waterlogged = waterlogged;
        }
    }
}