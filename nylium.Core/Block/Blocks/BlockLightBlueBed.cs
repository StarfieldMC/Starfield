// FILE AUTOGENERATED. DO NOT MODIFY
using System;

namespace nylium.Core.Block.Blocks {

    [Block("minecraft:light_blue_bed", 78, 1097, 1112, 1100)]
    public class BlockLightBlueBed : BlockBase {

        public override ushort State {
            get {
                if(Facing == "north" && Occupied == true && Part == "head") {
                    return 1097;
                }

                if(Facing == "north" && Occupied == true && Part == "foot") {
                    return 1098;
                }

                if(Facing == "north" && Occupied == false && Part == "head") {
                    return 1099;
                }

                if(Facing == "north" && Occupied == false && Part == "foot") {
                    return 1100;
                }

                if(Facing == "south" && Occupied == true && Part == "head") {
                    return 1101;
                }

                if(Facing == "south" && Occupied == true && Part == "foot") {
                    return 1102;
                }

                if(Facing == "south" && Occupied == false && Part == "head") {
                    return 1103;
                }

                if(Facing == "south" && Occupied == false && Part == "foot") {
                    return 1104;
                }

                if(Facing == "west" && Occupied == true && Part == "head") {
                    return 1105;
                }

                if(Facing == "west" && Occupied == true && Part == "foot") {
                    return 1106;
                }

                if(Facing == "west" && Occupied == false && Part == "head") {
                    return 1107;
                }

                if(Facing == "west" && Occupied == false && Part == "foot") {
                    return 1108;
                }

                if(Facing == "east" && Occupied == true && Part == "head") {
                    return 1109;
                }

                if(Facing == "east" && Occupied == true && Part == "foot") {
                    return 1110;
                }

                if(Facing == "east" && Occupied == false && Part == "head") {
                    return 1111;
                }

                if(Facing == "east" && Occupied == false && Part == "foot") {
                    return 1112;
                }

                return DefaultState;
            }

            set {
                if(value == 1097) {
                    Facing = "north";
Occupied = true;
Part = "head";
                }

                if(value == 1098) {
                    Facing = "north";
Occupied = true;
Part = "foot";
                }

                if(value == 1099) {
                    Facing = "north";
Occupied = false;
Part = "head";
                }

                if(value == 1100) {
                    Facing = "north";
Occupied = false;
Part = "foot";
                }

                if(value == 1101) {
                    Facing = "south";
Occupied = true;
Part = "head";
                }

                if(value == 1102) {
                    Facing = "south";
Occupied = true;
Part = "foot";
                }

                if(value == 1103) {
                    Facing = "south";
Occupied = false;
Part = "head";
                }

                if(value == 1104) {
                    Facing = "south";
Occupied = false;
Part = "foot";
                }

                if(value == 1105) {
                    Facing = "west";
Occupied = true;
Part = "head";
                }

                if(value == 1106) {
                    Facing = "west";
Occupied = true;
Part = "foot";
                }

                if(value == 1107) {
                    Facing = "west";
Occupied = false;
Part = "head";
                }

                if(value == 1108) {
                    Facing = "west";
Occupied = false;
Part = "foot";
                }

                if(value == 1109) {
                    Facing = "east";
Occupied = true;
Part = "head";
                }

                if(value == 1110) {
                    Facing = "east";
Occupied = true;
Part = "foot";
                }

                if(value == 1111) {
                    Facing = "east";
Occupied = false;
Part = "head";
                }

                if(value == 1112) {
                    Facing = "east";
Occupied = false;
Part = "foot";
                }

            }
        }

        public string Facing { get; set; } = "north";
        public bool Occupied { get; set; } = false;
        public string Part { get; set; } = "foot";

        public BlockLightBlueBed() {
            State = DefaultState;
        }

        public BlockLightBlueBed(ushort state) : base(state) {
            if(state < MinimumState || state > MaximumState) {
                throw new ArgumentOutOfRangeException("state");
            }

            State = state;
        }

        public BlockLightBlueBed(string facing, bool occupied, string part) {
            Facing = facing;
            Occupied = occupied;
            Part = part;
        }
    }
}