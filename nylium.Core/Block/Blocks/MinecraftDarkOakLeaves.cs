// FILE AUTOGENERATED. DO NOT MODIFY
using System;

namespace nylium.Core.Block.Blocks {

    public class BlockDarkOakLeaves : BlockBase {

        public override string Id { get { return "minecraft:dark_oak_leaves"; } }

        public override ushort MinimumState { get { return 215; } }
        public override ushort MaximumState { get { return 228; } }
        public override ushort DefaultState { get { return 228; } }

        public override ushort State {
            get {
                if(Distance == 1 && Persistent == true) {
                    return 215;
                }

                if(Distance == 1 && Persistent == false) {
                    return 216;
                }

                if(Distance == 2 && Persistent == true) {
                    return 217;
                }

                if(Distance == 2 && Persistent == false) {
                    return 218;
                }

                if(Distance == 3 && Persistent == true) {
                    return 219;
                }

                if(Distance == 3 && Persistent == false) {
                    return 220;
                }

                if(Distance == 4 && Persistent == true) {
                    return 221;
                }

                if(Distance == 4 && Persistent == false) {
                    return 222;
                }

                if(Distance == 5 && Persistent == true) {
                    return 223;
                }

                if(Distance == 5 && Persistent == false) {
                    return 224;
                }

                if(Distance == 6 && Persistent == true) {
                    return 225;
                }

                if(Distance == 6 && Persistent == false) {
                    return 226;
                }

                if(Distance == 7 && Persistent == true) {
                    return 227;
                }

                if(Distance == 7 && Persistent == false) {
                    return 228;
                }

                return DefaultState;
            }

            set {
                if(value == 215) {
                    Distance = 1;
Persistent = true;
                }

                if(value == 216) {
                    Distance = 1;
Persistent = false;
                }

                if(value == 217) {
                    Distance = 2;
Persistent = true;
                }

                if(value == 218) {
                    Distance = 2;
Persistent = false;
                }

                if(value == 219) {
                    Distance = 3;
Persistent = true;
                }

                if(value == 220) {
                    Distance = 3;
Persistent = false;
                }

                if(value == 221) {
                    Distance = 4;
Persistent = true;
                }

                if(value == 222) {
                    Distance = 4;
Persistent = false;
                }

                if(value == 223) {
                    Distance = 5;
Persistent = true;
                }

                if(value == 224) {
                    Distance = 5;
Persistent = false;
                }

                if(value == 225) {
                    Distance = 6;
Persistent = true;
                }

                if(value == 226) {
                    Distance = 6;
Persistent = false;
                }

                if(value == 227) {
                    Distance = 7;
Persistent = true;
                }

                if(value == 228) {
                    Distance = 7;
Persistent = false;
                }

            }
        }

        public int Distance { get; set; } = 7;
        public bool Persistent { get; set; } = false;

        public BlockDarkOakLeaves() {
            State = DefaultState;
        }

        public BlockDarkOakLeaves(ushort state) {
            if(state < MinimumState || state > MaximumState) {
                throw new ArgumentOutOfRangeException("state");
            }

            State = state;
        }

        public BlockDarkOakLeaves(int distance, bool persistent) {
            Distance = distance;
            Persistent = persistent;
        }
    }
}