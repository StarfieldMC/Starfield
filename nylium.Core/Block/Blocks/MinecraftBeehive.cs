// FILE AUTOGENERATED. DO NOT MODIFY
using System;

namespace nylium.Core.Block.Blocks {

    public class BlockBeehive : BlockBase {

        public override string Id { get { return "minecraft:beehive"; } }

        public override ushort MinimumState { get { return 15808; } }
        public override ushort MaximumState { get { return 15831; } }
        public override ushort DefaultState { get { return 15808; } }

        public override ushort State {
            get {
                if(Facing == "north" && HoneyLevel == 0) {
                    return 15808;
                }

                if(Facing == "north" && HoneyLevel == 1) {
                    return 15809;
                }

                if(Facing == "north" && HoneyLevel == 2) {
                    return 15810;
                }

                if(Facing == "north" && HoneyLevel == 3) {
                    return 15811;
                }

                if(Facing == "north" && HoneyLevel == 4) {
                    return 15812;
                }

                if(Facing == "north" && HoneyLevel == 5) {
                    return 15813;
                }

                if(Facing == "south" && HoneyLevel == 0) {
                    return 15814;
                }

                if(Facing == "south" && HoneyLevel == 1) {
                    return 15815;
                }

                if(Facing == "south" && HoneyLevel == 2) {
                    return 15816;
                }

                if(Facing == "south" && HoneyLevel == 3) {
                    return 15817;
                }

                if(Facing == "south" && HoneyLevel == 4) {
                    return 15818;
                }

                if(Facing == "south" && HoneyLevel == 5) {
                    return 15819;
                }

                if(Facing == "west" && HoneyLevel == 0) {
                    return 15820;
                }

                if(Facing == "west" && HoneyLevel == 1) {
                    return 15821;
                }

                if(Facing == "west" && HoneyLevel == 2) {
                    return 15822;
                }

                if(Facing == "west" && HoneyLevel == 3) {
                    return 15823;
                }

                if(Facing == "west" && HoneyLevel == 4) {
                    return 15824;
                }

                if(Facing == "west" && HoneyLevel == 5) {
                    return 15825;
                }

                if(Facing == "east" && HoneyLevel == 0) {
                    return 15826;
                }

                if(Facing == "east" && HoneyLevel == 1) {
                    return 15827;
                }

                if(Facing == "east" && HoneyLevel == 2) {
                    return 15828;
                }

                if(Facing == "east" && HoneyLevel == 3) {
                    return 15829;
                }

                if(Facing == "east" && HoneyLevel == 4) {
                    return 15830;
                }

                if(Facing == "east" && HoneyLevel == 5) {
                    return 15831;
                }

                return DefaultState;
            }

            set {
                if(value == 15808) {
                    Facing = "north";
HoneyLevel = 0;
                }

                if(value == 15809) {
                    Facing = "north";
HoneyLevel = 1;
                }

                if(value == 15810) {
                    Facing = "north";
HoneyLevel = 2;
                }

                if(value == 15811) {
                    Facing = "north";
HoneyLevel = 3;
                }

                if(value == 15812) {
                    Facing = "north";
HoneyLevel = 4;
                }

                if(value == 15813) {
                    Facing = "north";
HoneyLevel = 5;
                }

                if(value == 15814) {
                    Facing = "south";
HoneyLevel = 0;
                }

                if(value == 15815) {
                    Facing = "south";
HoneyLevel = 1;
                }

                if(value == 15816) {
                    Facing = "south";
HoneyLevel = 2;
                }

                if(value == 15817) {
                    Facing = "south";
HoneyLevel = 3;
                }

                if(value == 15818) {
                    Facing = "south";
HoneyLevel = 4;
                }

                if(value == 15819) {
                    Facing = "south";
HoneyLevel = 5;
                }

                if(value == 15820) {
                    Facing = "west";
HoneyLevel = 0;
                }

                if(value == 15821) {
                    Facing = "west";
HoneyLevel = 1;
                }

                if(value == 15822) {
                    Facing = "west";
HoneyLevel = 2;
                }

                if(value == 15823) {
                    Facing = "west";
HoneyLevel = 3;
                }

                if(value == 15824) {
                    Facing = "west";
HoneyLevel = 4;
                }

                if(value == 15825) {
                    Facing = "west";
HoneyLevel = 5;
                }

                if(value == 15826) {
                    Facing = "east";
HoneyLevel = 0;
                }

                if(value == 15827) {
                    Facing = "east";
HoneyLevel = 1;
                }

                if(value == 15828) {
                    Facing = "east";
HoneyLevel = 2;
                }

                if(value == 15829) {
                    Facing = "east";
HoneyLevel = 3;
                }

                if(value == 15830) {
                    Facing = "east";
HoneyLevel = 4;
                }

                if(value == 15831) {
                    Facing = "east";
HoneyLevel = 5;
                }

            }
        }

        public string Facing { get; set; } = "north";
        public int HoneyLevel { get; set; } = 0;

        public BlockBeehive() {
            State = DefaultState;
        }

        public BlockBeehive(ushort state) {
            if(state < MinimumState || state > MaximumState) {
                throw new ArgumentOutOfRangeException("state");
            }

            State = state;
        }

        public BlockBeehive(string facing, int honey_level) {
            Facing = facing;
            HoneyLevel = honey_level;
        }
    }
}