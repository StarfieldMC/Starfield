// FILE AUTOGENERATED. DO NOT MODIFY
using System;

namespace nylium.Core.Block.Blocks {

    public class BlockWarpedSlab : BlockBase {

        public override string Id { get { return "minecraft:warped_slab"; } }

        public override ushort MinimumState { get { return 15061; } }
        public override ushort MaximumState { get { return 15066; } }
        public override ushort DefaultState { get { return 15064; } }

        public override ushort State {
            get {
                if(Type == "top" && Waterlogged == true) {
                    return 15061;
                }

                if(Type == "top" && Waterlogged == false) {
                    return 15062;
                }

                if(Type == "bottom" && Waterlogged == true) {
                    return 15063;
                }

                if(Type == "bottom" && Waterlogged == false) {
                    return 15064;
                }

                if(Type == "double" && Waterlogged == true) {
                    return 15065;
                }

                if(Type == "double" && Waterlogged == false) {
                    return 15066;
                }

                return DefaultState;
            }

            set {
                if(value == 15061) {
                    Type = "top";
Waterlogged = true;
                }

                if(value == 15062) {
                    Type = "top";
Waterlogged = false;
                }

                if(value == 15063) {
                    Type = "bottom";
Waterlogged = true;
                }

                if(value == 15064) {
                    Type = "bottom";
Waterlogged = false;
                }

                if(value == 15065) {
                    Type = "double";
Waterlogged = true;
                }

                if(value == 15066) {
                    Type = "double";
Waterlogged = false;
                }

            }
        }

        public string Type { get; set; } = "bottom";
        public bool Waterlogged { get; set; } = false;

        public BlockWarpedSlab() {
            State = DefaultState;
        }

        public BlockWarpedSlab(ushort state) {
            if(state < MinimumState || state > MaximumState) {
                throw new ArgumentOutOfRangeException("state");
            }

            State = state;
        }

        public BlockWarpedSlab(string type, bool waterlogged) {
            Type = type;
            Waterlogged = waterlogged;
        }
    }
}