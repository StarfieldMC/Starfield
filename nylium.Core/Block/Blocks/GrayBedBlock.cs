// AUTOGENERATED. DO NOT MODIFY
using nylium.Core.Level;

namespace nylium.Core.Block.Blocks {

    public class GrayBedBlock : BaseBlock {

        public Face Facing { get; }
        public bool Occupied { get; }
        public Part Part { get; }

        public GrayBedBlock(Chunk chunk, int x, int y, int z) : base(chunk, x, y, z, 82, 1164) { }

        public GrayBedBlock(Chunk chunk, int x, int y, int z, ushort state) : base(chunk, x, y, z, 82, state) {
            if(state == 1161) {
                Facing = Face.North;
                Occupied = true;
                Part = Part.Head;
            } else if(state == 1162) {
                Facing = Face.North;
                Occupied = true;
                Part = Part.Foot;
            } else if(state == 1163) {
                Facing = Face.North;
                Occupied = false;
                Part = Part.Head;
            } else if(state == 1164) {
                Facing = Face.North;
                Occupied = false;
                Part = Part.Foot;
            } else if(state == 1165) {
                Facing = Face.South;
                Occupied = true;
                Part = Part.Head;
            } else if(state == 1166) {
                Facing = Face.South;
                Occupied = true;
                Part = Part.Foot;
            } else if(state == 1167) {
                Facing = Face.South;
                Occupied = false;
                Part = Part.Head;
            } else if(state == 1168) {
                Facing = Face.South;
                Occupied = false;
                Part = Part.Foot;
            } else if(state == 1169) {
                Facing = Face.West;
                Occupied = true;
                Part = Part.Head;
            } else if(state == 1170) {
                Facing = Face.West;
                Occupied = true;
                Part = Part.Foot;
            } else if(state == 1171) {
                Facing = Face.West;
                Occupied = false;
                Part = Part.Head;
            } else if(state == 1172) {
                Facing = Face.West;
                Occupied = false;
                Part = Part.Foot;
            } else if(state == 1173) {
                Facing = Face.East;
                Occupied = true;
                Part = Part.Head;
            } else if(state == 1174) {
                Facing = Face.East;
                Occupied = true;
                Part = Part.Foot;
            } else if(state == 1175) {
                Facing = Face.East;
                Occupied = false;
                Part = Part.Head;
            } else if(state == 1176) {
                Facing = Face.East;
                Occupied = false;
                Part = Part.Foot;
            }
        }

        public GrayBedBlock(Chunk chunk, int x, int y, int z, Face facing, bool occupied, Part part) : base(chunk, x, y, z, 82, 1164) {
if(facing == Face.North && occupied == true && part == Part.Head) {
                State = 1161;
            } else if(facing == Face.North && occupied == true && part == Part.Foot) {
                State = 1162;
            } else if(facing == Face.North && occupied == false && part == Part.Head) {
                State = 1163;
            } else if(facing == Face.North && occupied == false && part == Part.Foot) {
                State = 1164;
            } else if(facing == Face.South && occupied == true && part == Part.Head) {
                State = 1165;
            } else if(facing == Face.South && occupied == true && part == Part.Foot) {
                State = 1166;
            } else if(facing == Face.South && occupied == false && part == Part.Head) {
                State = 1167;
            } else if(facing == Face.South && occupied == false && part == Part.Foot) {
                State = 1168;
            } else if(facing == Face.West && occupied == true && part == Part.Head) {
                State = 1169;
            } else if(facing == Face.West && occupied == true && part == Part.Foot) {
                State = 1170;
            } else if(facing == Face.West && occupied == false && part == Part.Head) {
                State = 1171;
            } else if(facing == Face.West && occupied == false && part == Part.Foot) {
                State = 1172;
            } else if(facing == Face.East && occupied == true && part == Part.Head) {
                State = 1173;
            } else if(facing == Face.East && occupied == true && part == Part.Foot) {
                State = 1174;
            } else if(facing == Face.East && occupied == false && part == Part.Head) {
                State = 1175;
            } else if(facing == Face.East && occupied == false && part == Part.Foot) {
                State = 1176;
            }
        }
    }
}
