// AUTOGENERATED. DO NOT MODIFY
using nylium.Core.Level;

namespace nylium.Core.Block.Blocks {

    public class AcaciaLeavesBlock : BaseBlock {

        public int Distance { get; }
        public bool Persistent { get; }

        public AcaciaLeavesBlock(Chunk chunk, int x, int y, int z) : base(chunk, x, y, z, 63, 214) { }

        public AcaciaLeavesBlock(Chunk chunk, int x, int y, int z, ushort state) : base(chunk, x, y, z 63, state) {
            if(state == 201) {
                Distance = 1;
                Persistent = true;
            } else if(state == 202) {
                Distance = 1;
                Persistent = false;
            } else if(state == 203) {
                Distance = 2;
                Persistent = true;
            } else if(state == 204) {
                Distance = 2;
                Persistent = false;
            } else if(state == 205) {
                Distance = 3;
                Persistent = true;
            } else if(state == 206) {
                Distance = 3;
                Persistent = false;
            } else if(state == 207) {
                Distance = 4;
                Persistent = true;
            } else if(state == 208) {
                Distance = 4;
                Persistent = false;
            } else if(state == 209) {
                Distance = 5;
                Persistent = true;
            } else if(state == 210) {
                Distance = 5;
                Persistent = false;
            } else if(state == 211) {
                Distance = 6;
                Persistent = true;
            } else if(state == 212) {
                Distance = 6;
                Persistent = false;
            } else if(state == 213) {
                Distance = 7;
                Persistent = true;
            } else if(state == 214) {
                Distance = 7;
                Persistent = false;
            }
        }

        public AcaciaLeavesBlock(Chunk chunk, int x, int y, int z, int distance, bool persistent) : base(chunk, x, y, z, 63, 214) {
if(distance == 1 && persistent == true) {
                State = 201;
            } else if(distance == 1 && persistent == false) {
                State = 202;
            } else if(distance == 2 && persistent == true) {
                State = 203;
            } else if(distance == 2 && persistent == false) {
                State = 204;
            } else if(distance == 3 && persistent == true) {
                State = 205;
            } else if(distance == 3 && persistent == false) {
                State = 206;
            } else if(distance == 4 && persistent == true) {
                State = 207;
            } else if(distance == 4 && persistent == false) {
                State = 208;
            } else if(distance == 5 && persistent == true) {
                State = 209;
            } else if(distance == 5 && persistent == false) {
                State = 210;
            } else if(distance == 6 && persistent == true) {
                State = 211;
            } else if(distance == 6 && persistent == false) {
                State = 212;
            } else if(distance == 7 && persistent == true) {
                State = 213;
            } else if(distance == 7 && persistent == false) {
                State = 214;
            }
        }
    }
}
