// AUTOGENERATED. DO NOT MODIFY
using nylium.Core.Level;

namespace nylium.Core.Block.Blocks {

    public class SpruceLeavesBlock : BaseBlock {

        public int Distance { get; }
        public bool Persistent { get; }

        public SpruceLeavesBlock(Chunk chunk, int x, int y, int z) : base(chunk, x, y, z, 60, 172) { }

        public SpruceLeavesBlock(Chunk chunk, int x, int y, int z, ushort state) : base(chunk, x, y, z 60, state) {
            if(state == 159) {
                Distance = 1;
                Persistent = true;
            } else if(state == 160) {
                Distance = 1;
                Persistent = false;
            } else if(state == 161) {
                Distance = 2;
                Persistent = true;
            } else if(state == 162) {
                Distance = 2;
                Persistent = false;
            } else if(state == 163) {
                Distance = 3;
                Persistent = true;
            } else if(state == 164) {
                Distance = 3;
                Persistent = false;
            } else if(state == 165) {
                Distance = 4;
                Persistent = true;
            } else if(state == 166) {
                Distance = 4;
                Persistent = false;
            } else if(state == 167) {
                Distance = 5;
                Persistent = true;
            } else if(state == 168) {
                Distance = 5;
                Persistent = false;
            } else if(state == 169) {
                Distance = 6;
                Persistent = true;
            } else if(state == 170) {
                Distance = 6;
                Persistent = false;
            } else if(state == 171) {
                Distance = 7;
                Persistent = true;
            } else if(state == 172) {
                Distance = 7;
                Persistent = false;
            }
        }

        public SpruceLeavesBlock(Chunk chunk, int x, int y, int z, int distance, bool persistent) : base(chunk, x, y, z, 60, 172) {
if(distance == 1 && persistent == true) {
                State = 159;
            } else if(distance == 1 && persistent == false) {
                State = 160;
            } else if(distance == 2 && persistent == true) {
                State = 161;
            } else if(distance == 2 && persistent == false) {
                State = 162;
            } else if(distance == 3 && persistent == true) {
                State = 163;
            } else if(distance == 3 && persistent == false) {
                State = 164;
            } else if(distance == 4 && persistent == true) {
                State = 165;
            } else if(distance == 4 && persistent == false) {
                State = 166;
            } else if(distance == 5 && persistent == true) {
                State = 167;
            } else if(distance == 5 && persistent == false) {
                State = 168;
            } else if(distance == 6 && persistent == true) {
                State = 169;
            } else if(distance == 6 && persistent == false) {
                State = 170;
            } else if(distance == 7 && persistent == true) {
                State = 171;
            } else if(distance == 7 && persistent == false) {
                State = 172;
            }
        }
    }
}
