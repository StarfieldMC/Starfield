// AUTOGENERATED. DO NOT MODIFY
using nylium.Core.Level;

namespace nylium.Core.Block.Blocks {

    public class BirchLeavesBlock : BaseBlock {

        public int Distance { get; }
        public bool Persistent { get; }

        public BirchLeavesBlock(Chunk chunk, int x, int y, int z) : base(chunk, x, y, z, 61, 186) { }

        public BirchLeavesBlock(Chunk chunk, int x, int y, int z, ushort state) : base(chunk, x, y, z 61, state) {
            if(state == 173) {
                Distance = 1;
                Persistent = true;
            } else if(state == 174) {
                Distance = 1;
                Persistent = false;
            } else if(state == 175) {
                Distance = 2;
                Persistent = true;
            } else if(state == 176) {
                Distance = 2;
                Persistent = false;
            } else if(state == 177) {
                Distance = 3;
                Persistent = true;
            } else if(state == 178) {
                Distance = 3;
                Persistent = false;
            } else if(state == 179) {
                Distance = 4;
                Persistent = true;
            } else if(state == 180) {
                Distance = 4;
                Persistent = false;
            } else if(state == 181) {
                Distance = 5;
                Persistent = true;
            } else if(state == 182) {
                Distance = 5;
                Persistent = false;
            } else if(state == 183) {
                Distance = 6;
                Persistent = true;
            } else if(state == 184) {
                Distance = 6;
                Persistent = false;
            } else if(state == 185) {
                Distance = 7;
                Persistent = true;
            } else if(state == 186) {
                Distance = 7;
                Persistent = false;
            }
        }

        public BirchLeavesBlock(Chunk chunk, int x, int y, int z, int distance, bool persistent) : base(chunk, x, y, z, 61, 186) {
if(distance == 1 && persistent == true) {
                State = 173;
            } else if(distance == 1 && persistent == false) {
                State = 174;
            } else if(distance == 2 && persistent == true) {
                State = 175;
            } else if(distance == 2 && persistent == false) {
                State = 176;
            } else if(distance == 3 && persistent == true) {
                State = 177;
            } else if(distance == 3 && persistent == false) {
                State = 178;
            } else if(distance == 4 && persistent == true) {
                State = 179;
            } else if(distance == 4 && persistent == false) {
                State = 180;
            } else if(distance == 5 && persistent == true) {
                State = 181;
            } else if(distance == 5 && persistent == false) {
                State = 182;
            } else if(distance == 6 && persistent == true) {
                State = 183;
            } else if(distance == 6 && persistent == false) {
                State = 184;
            } else if(distance == 7 && persistent == true) {
                State = 185;
            } else if(distance == 7 && persistent == false) {
                State = 186;
            }
        }
    }
}
