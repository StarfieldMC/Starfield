// AUTOGENERATED. DO NOT MODIFY
using nylium.Core.Level;

namespace nylium.Core.Block.Blocks {

    public class CutRedSandstoneSlabBlock : BaseBlock {

        public Type Type { get; }
        public bool Waterlogged { get; }

        public CutRedSandstoneSlabBlock(Chunk chunk, int x, int y, int z) : base(chunk, x, y, z, 469, 8409) { }

        public CutRedSandstoneSlabBlock(Chunk chunk, int x, int y, int z, ushort state) : base(chunk, x, y, z 469, state) {if(state == 8406) {
                Type = Type.Top;
                Waterlogged = true;
            } else if(state == 8407) {
                Type = Type.Top;
                Waterlogged = false;
            } else if(state == 8408) {
                Type = Type.Bottom;
                Waterlogged = true;
            } else if(state == 8409) {
                Type = Type.Bottom;
                Waterlogged = false;
            } else if(state == 8410) {
                Type = Type.Double;
                Waterlogged = true;
            } else if(state == 8411) {
                Type = Type.Double;
                Waterlogged = false;
            }
        }

        public CutRedSandstoneSlabBlock(Chunk chunk, int x, int y, int z, Type type, bool waterlogged) : base(chunk, x, y, z, 469, 8409) {
if(type == Type.Top && waterlogged == true) {
                State = 8406;
            } else if(type == Type.Top && waterlogged == false) {
                State = 8407;
            } else if(type == Type.Bottom && waterlogged == true) {
                State = 8408;
            } else if(type == Type.Bottom && waterlogged == false) {
                State = 8409;
            } else if(type == Type.Double && waterlogged == true) {
                State = 8410;
            } else if(type == Type.Double && waterlogged == false) {
                State = 8411;
            }
        }

        public enum Type {
            
            Top,
            Bottom,
            Double
        }
    }
}
